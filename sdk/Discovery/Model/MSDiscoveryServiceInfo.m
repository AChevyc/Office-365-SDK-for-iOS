/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSDiscoveryModels.h"



/** Implementation for MSDiscoveryServiceInfo
 *
 */
@implementation MSDiscoveryServiceInfo


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"capability", @"capability", @"entityKey", @"entityKey", @"providerId", @"providerId", @"providerName", @"providerName", @"serviceAccountType", @"serviceAccountType", @"serviceApiVersion", @"serviceApiVersion", @"serviceEndpointUri", @"serviceEndpointUri", @"serviceId", @"serviceId", @"serviceName", @"serviceName", @"serviceResourceId", @"serviceResourceId", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.DiscoveryServices.ServiceInfo";
        
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_capability = [dic objectForKey: @"capability"] != nil ? [[dic objectForKey: @"capability"] copy] : _capability;
		_entityKey = [dic objectForKey: @"entityKey"] != nil ? [[dic objectForKey: @"entityKey"] copy] : _entityKey;
		_providerId = [dic objectForKey: @"providerId"] != nil ? [[dic objectForKey: @"providerId"] copy] : _providerId;
		_providerName = [dic objectForKey: @"providerName"] != nil ? [[dic objectForKey: @"providerName"] copy] : _providerName;
		_serviceAccountType = [dic objectForKey: @"serviceAccountType"] != nil ? [[dic objectForKey: @"serviceAccountType"] intValue] : _serviceAccountType;
		_serviceApiVersion = [dic objectForKey: @"serviceApiVersion"] != nil ? [[dic objectForKey: @"serviceApiVersion"] copy] : _serviceApiVersion;
		_serviceEndpointUri = [dic objectForKey: @"serviceEndpointUri"] != nil ? [[dic objectForKey: @"serviceEndpointUri"] copy] : _serviceEndpointUri;
		_serviceId = [dic objectForKey: @"serviceId"] != nil ? [[dic objectForKey: @"serviceId"] copy] : _serviceId;
		_serviceName = [dic objectForKey: @"serviceName"] != nil ? [[dic objectForKey: @"serviceName"] copy] : _serviceName;
		_serviceResourceId = [dic objectForKey: @"serviceResourceId"] != nil ? [[dic objectForKey: @"serviceResourceId"] copy] : _serviceResourceId;

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [_capability copy], @"capability",
		 [_entityKey copy], @"entityKey",
		 [_providerId copy], @"providerId",
		 [_providerName copy], @"providerName",
		 [NSNumber numberWithInt: _serviceAccountType], @"serviceAccountType",
		 [_serviceApiVersion copy], @"serviceApiVersion",
		 [_serviceEndpointUri copy], @"serviceEndpointUri",
		 [_serviceId copy], @"serviceId",
		 [_serviceName copy], @"serviceName",
		 [_serviceResourceId copy], @"serviceResourceId",
            nil];
}


/** Setter implementation for property capability
 *
 */
- (void) setCapability: (NSString *) value {
    _capability = value;
    [self valueChangedFor:@"capability"];
}
       
/** Setter implementation for property entityKey
 *
 */
- (void) setEntityKey: (NSString *) value {
    _entityKey = value;
    [self valueChangedFor:@"entityKey"];
}
       
/** Setter implementation for property providerId
 *
 */
- (void) setProviderId: (NSString *) value {
    _providerId = value;
    [self valueChangedFor:@"providerId"];
}
       
/** Setter implementation for property providerName
 *
 */
- (void) setProviderName: (NSString *) value {
    _providerName = value;
    [self valueChangedFor:@"providerName"];
}
       
/** Setter implementation for property serviceAccountType
 *
 */
- (void) setServiceAccountType: (int) value {
    _serviceAccountType = value;
    [self valueChangedFor:@"serviceAccountType"];
}
       
/** Setter implementation for property serviceApiVersion
 *
 */
- (void) setServiceApiVersion: (NSString *) value {
    _serviceApiVersion = value;
    [self valueChangedFor:@"serviceApiVersion"];
}
       
/** Setter implementation for property serviceEndpointUri
 *
 */
- (void) setServiceEndpointUri: (NSString *) value {
    _serviceEndpointUri = value;
    [self valueChangedFor:@"serviceEndpointUri"];
}
       
/** Setter implementation for property serviceId
 *
 */
- (void) setServiceId: (NSString *) value {
    _serviceId = value;
    [self valueChangedFor:@"serviceId"];
}
       
/** Setter implementation for property serviceName
 *
 */
- (void) setServiceName: (NSString *) value {
    _serviceName = value;
    [self valueChangedFor:@"serviceName"];
}
       
/** Setter implementation for property serviceResourceId
 *
 */
- (void) setServiceResourceId: (NSString *) value {
    _serviceResourceId = value;
    [self valueChangedFor:@"serviceResourceId"];
}
       

@end
