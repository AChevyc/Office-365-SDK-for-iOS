/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSDirectoryServicesModels.h"



/** Implementation for MSDirectoryServicesExtensionProperty
 *
 */
@implementation MSDirectoryServicesExtensionProperty


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"appDisplayName", @"appDisplayName", @"name", @"name", @"dataType", @"dataType", @"isSyncedFromOnPremises", @"isSyncedFromOnPremises", @"targetObjects", @"targetObjects", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", @"createdOnBehalfOf", @"createdOnBehalfOf", @"createdObjects", @"createdObjects", @"manager", @"manager", @"directReports", @"directReports", @"members", @"members", @"memberOf", @"memberOf", @"owners", @"owners", @"ownedObjects", @"ownedObjects", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.DirectoryServices.ExtensionProperty";
        
        
		_targetObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property appDisplayName
 *
 */
- (void) setAppDisplayName: (NSString *) value {
    _appDisplayName = value;
    [self valueChanged:_appDisplayName forProperty:@"appDisplayName"];
}
       
/** Setter implementation for property name
 *
 */
- (void) setName: (NSString *) value {
    _name = value;
    [self valueChanged:_name forProperty:@"name"];
}
       
/** Setter implementation for property dataType
 *
 */
- (void) setDataType: (NSString *) value {
    _dataType = value;
    [self valueChanged:_dataType forProperty:@"dataType"];
}
       
/** Setter implementation for property isSyncedFromOnPremises
 *
 */
- (void) setIsSyncedFromOnPremises: (bool) value {
    _isSyncedFromOnPremises = value;
    [self valueChangedForBool:_isSyncedFromOnPremises forProperty:@"isSyncedFromOnPremises"];
}
       
/** Setter implementation for property targetObjects
 *
 */
- (void) setTargetObjects: (NSMutableArray *) value {
    _targetObjects = value;
    [self valueChanged:_targetObjects forProperty:@"targetObjects"];
}
       

@end
