/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSDirectoryServicesModels.h"



/** Implementation for MSDirectoryServicesDirectoryObject
 *
 */
@implementation MSDirectoryServicesDirectoryObject


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", @"createdOnBehalfOf", @"createdOnBehalfOf", @"createdObjects", @"createdObjects", @"manager", @"manager", @"directReports", @"directReports", @"members", @"members", @"memberOf", @"memberOf", @"owners", @"owners", @"ownedObjects", @"ownedObjects", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.DirectoryServices.DirectoryObject";
        
        
		_createdObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_directReports = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_members = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_memberOf = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_owners = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_ownedObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property objectType
 *
 */
- (void) setObjectType: (NSString *) value {
    _objectType = value;
    [self valueChanged:_objectType forProperty:@"objectType"];
}
       
/** Setter implementation for property objectId
 *
 */
- (void) setObjectId: (NSString *) value {
    _objectId = value;
    [self valueChanged:_objectId forProperty:@"objectId"];
}
       
/** Setter implementation for property deletionTimestamp
 *
 */
- (void) setDeletionTimestamp: (NSDate *) value {
    _deletionTimestamp = value;
    [self valueChanged:_deletionTimestamp forProperty:@"deletionTimestamp"];
}
       
/** Setter implementation for property createdOnBehalfOf
 *
 */
- (void) setCreatedOnBehalfOf: (MSDirectoryServicesDirectoryObject *) value {
    _createdOnBehalfOf = value;
    [self valueChanged:_createdOnBehalfOf forProperty:@"createdOnBehalfOf"];
}
       
/** Setter implementation for property createdObjects
 *
 */
- (void) setCreatedObjects: (NSMutableArray *) value {
    _createdObjects = value;
    [self valueChanged:_createdObjects forProperty:@"createdObjects"];
}
       
/** Setter implementation for property manager
 *
 */
- (void) setManager: (MSDirectoryServicesDirectoryObject *) value {
    _manager = value;
    [self valueChanged:_manager forProperty:@"manager"];
}
       
/** Setter implementation for property directReports
 *
 */
- (void) setDirectReports: (NSMutableArray *) value {
    _directReports = value;
    [self valueChanged:_directReports forProperty:@"directReports"];
}
       
/** Setter implementation for property members
 *
 */
- (void) setMembers: (NSMutableArray *) value {
    _members = value;
    [self valueChanged:_members forProperty:@"members"];
}
       
/** Setter implementation for property memberOf
 *
 */
- (void) setMemberOf: (NSMutableArray *) value {
    _memberOf = value;
    [self valueChanged:_memberOf forProperty:@"memberOf"];
}
       
/** Setter implementation for property owners
 *
 */
- (void) setOwners: (NSMutableArray *) value {
    _owners = value;
    [self valueChanged:_owners forProperty:@"owners"];
}
       
/** Setter implementation for property ownedObjects
 *
 */
- (void) setOwnedObjects: (NSMutableArray *) value {
    _ownedObjects = value;
    [self valueChanged:_ownedObjects forProperty:@"ownedObjects"];
}
       

@end
