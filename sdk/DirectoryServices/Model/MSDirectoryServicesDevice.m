/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSDirectoryServicesModels.h"



/** Implementation for MSDirectoryServicesDevice
 *
 */
@implementation MSDirectoryServicesDevice


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"accountEnabled", @"accountEnabled", @"alternativeSecurityIds", @"alternativeSecurityIds", @"approximateLastLogonTimestamp", @"approximateLastLogonTimestamp", @"deviceId", @"deviceId", @"deviceMetadata", @"deviceMetadata", @"deviceObjectVersion", @"deviceObjectVersion", @"deviceOSType", @"deviceOSType", @"deviceOSVersion", @"deviceOSVersion", @"devicePhysicalIds", @"devicePhysicalIds", @"deviceTrustType", @"deviceTrustType", @"dirSyncEnabled", @"dirSyncEnabled", @"displayName", @"displayName", @"lastDirSyncTime", @"lastDirSyncTime", @"registeredOwners", @"registeredOwners", @"registeredUsers", @"registeredUsers", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", @"createdOnBehalfOf", @"createdOnBehalfOf", @"createdObjects", @"createdObjects", @"manager", @"manager", @"directReports", @"directReports", @"members", @"members", @"memberOf", @"memberOf", @"owners", @"owners", @"ownedObjects", @"ownedObjects", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.DirectoryServices.Device";
        
        
		_alternativeSecurityIds = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_devicePhysicalIds = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_registeredOwners = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_registeredUsers = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property accountEnabled
 *
 */
- (void) setAccountEnabled: (bool) value {
    _accountEnabled = value;
    [self valueChangedForBool:_accountEnabled forProperty:@"accountEnabled"];
}
       
/** Setter implementation for property alternativeSecurityIds
 *
 */
- (void) setAlternativeSecurityIds: (NSMutableArray *) value {
    _alternativeSecurityIds = value;
    [self valueChanged:_alternativeSecurityIds forProperty:@"alternativeSecurityIds"];
}
       
/** Setter implementation for property approximateLastLogonTimestamp
 *
 */
- (void) setApproximateLastLogonTimestamp: (NSDate *) value {
    _approximateLastLogonTimestamp = value;
    [self valueChanged:_approximateLastLogonTimestamp forProperty:@"approximateLastLogonTimestamp"];
}
       
/** Setter implementation for property deviceId
 *
 */
- (void) setDeviceId: (NSString *) value {
    _deviceId = value;
    [self valueChanged:_deviceId forProperty:@"deviceId"];
}
       
/** Setter implementation for property deviceMetadata
 *
 */
- (void) setDeviceMetadata: (NSString *) value {
    _deviceMetadata = value;
    [self valueChanged:_deviceMetadata forProperty:@"deviceMetadata"];
}
       
/** Setter implementation for property deviceObjectVersion
 *
 */
- (void) setDeviceObjectVersion: (int) value {
    _deviceObjectVersion = value;
    [self valueChangedForInt:_deviceObjectVersion forProperty:@"deviceObjectVersion"];
}
       
/** Setter implementation for property deviceOSType
 *
 */
- (void) setDeviceOSType: (NSString *) value {
    _deviceOSType = value;
    [self valueChanged:_deviceOSType forProperty:@"deviceOSType"];
}
       
/** Setter implementation for property deviceOSVersion
 *
 */
- (void) setDeviceOSVersion: (NSString *) value {
    _deviceOSVersion = value;
    [self valueChanged:_deviceOSVersion forProperty:@"deviceOSVersion"];
}
       
/** Setter implementation for property devicePhysicalIds
 *
 */
- (void) setDevicePhysicalIds: (NSMutableArray *) value {
    _devicePhysicalIds = value;
    [self valueChanged:_devicePhysicalIds forProperty:@"devicePhysicalIds"];
}
       
/** Setter implementation for property deviceTrustType
 *
 */
- (void) setDeviceTrustType: (NSString *) value {
    _deviceTrustType = value;
    [self valueChanged:_deviceTrustType forProperty:@"deviceTrustType"];
}
       
/** Setter implementation for property dirSyncEnabled
 *
 */
- (void) setDirSyncEnabled: (bool) value {
    _dirSyncEnabled = value;
    [self valueChangedForBool:_dirSyncEnabled forProperty:@"dirSyncEnabled"];
}
       
/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChanged:_displayName forProperty:@"displayName"];
}
       
/** Setter implementation for property lastDirSyncTime
 *
 */
- (void) setLastDirSyncTime: (NSDate *) value {
    _lastDirSyncTime = value;
    [self valueChanged:_lastDirSyncTime forProperty:@"lastDirSyncTime"];
}
       
/** Setter implementation for property registeredOwners
 *
 */
- (void) setRegisteredOwners: (NSMutableArray *) value {
    _registeredOwners = value;
    [self valueChanged:_registeredOwners forProperty:@"registeredOwners"];
}
       
/** Setter implementation for property registeredUsers
 *
 */
- (void) setRegisteredUsers: (NSMutableArray *) value {
    _registeredUsers = value;
    [self valueChanged:_registeredUsers forProperty:@"registeredUsers"];
}
       

@end
