/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSDirectoryServicesModels.h"



/** Implementation for MSDirectoryServicesContact
 *
 */
@implementation MSDirectoryServicesContact


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"city", @"city", @"country", @"country", @"department", @"department", @"dirSyncEnabled", @"dirSyncEnabled", @"displayName", @"displayName", @"facsimileTelephoneNumber", @"facsimileTelephoneNumber", @"givenName", @"givenName", @"jobTitle", @"jobTitle", @"lastDirSyncTime", @"lastDirSyncTime", @"mail", @"mail", @"mailNickname", @"mailNickname", @"mobile", @"mobile", @"physicalDeliveryOfficeName", @"physicalDeliveryOfficeName", @"postalCode", @"postalCode", @"provisioningErrors", @"provisioningErrors", @"proxyAddresses", @"proxyAddresses", @"sipProxyAddress", @"sipProxyAddress", @"state", @"state", @"streetAddress", @"streetAddress", @"surname", @"surname", @"telephoneNumber", @"telephoneNumber", @"thumbnailPhoto", @"thumbnailPhoto", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", @"createdOnBehalfOf", @"createdOnBehalfOf", @"createdObjects", @"createdObjects", @"manager", @"manager", @"directReports", @"directReports", @"members", @"members", @"memberOf", @"memberOf", @"owners", @"owners", @"ownedObjects", @"ownedObjects", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.DirectoryServices.Contact";
        
        
		_provisioningErrors = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_proxyAddresses = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_city = [dic objectForKey: @"city"] != nil ? [[dic objectForKey: @"city"] copy] : _city;
		_country = [dic objectForKey: @"country"] != nil ? [[dic objectForKey: @"country"] copy] : _country;
		_department = [dic objectForKey: @"department"] != nil ? [[dic objectForKey: @"department"] copy] : _department;
		_dirSyncEnabled = [dic objectForKey: @"dirSyncEnabled"] != nil ? [[dic objectForKey: @"dirSyncEnabled"] boolValue] : _dirSyncEnabled;
		_displayName = [dic objectForKey: @"displayName"] != nil ? [[dic objectForKey: @"displayName"] copy] : _displayName;
		_facsimileTelephoneNumber = [dic objectForKey: @"facsimileTelephoneNumber"] != nil ? [[dic objectForKey: @"facsimileTelephoneNumber"] copy] : _facsimileTelephoneNumber;
		_givenName = [dic objectForKey: @"givenName"] != nil ? [[dic objectForKey: @"givenName"] copy] : _givenName;
		_jobTitle = [dic objectForKey: @"jobTitle"] != nil ? [[dic objectForKey: @"jobTitle"] copy] : _jobTitle;
		_lastDirSyncTime = [dic objectForKey: @"lastDirSyncTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"lastDirSyncTime"]] : _lastDirSyncTime;
		_mail = [dic objectForKey: @"mail"] != nil ? [[dic objectForKey: @"mail"] copy] : _mail;
		_mailNickname = [dic objectForKey: @"mailNickname"] != nil ? [[dic objectForKey: @"mailNickname"] copy] : _mailNickname;
		_mobile = [dic objectForKey: @"mobile"] != nil ? [[dic objectForKey: @"mobile"] copy] : _mobile;
		_physicalDeliveryOfficeName = [dic objectForKey: @"physicalDeliveryOfficeName"] != nil ? [[dic objectForKey: @"physicalDeliveryOfficeName"] copy] : _physicalDeliveryOfficeName;
		_postalCode = [dic objectForKey: @"postalCode"] != nil ? [[dic objectForKey: @"postalCode"] copy] : _postalCode;

        if([dic objectForKey: @"provisioningErrors"] != [NSNull null]){
            _provisioningErrors = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"provisioningErrors"] count]];
            
            for (id object in [dic objectForKey: @"provisioningErrors"]) {
                [_provisioningErrors addObject:[[MSDirectoryServicesProvisioningError alloc] initWithDictionary: object]];
            }
        }
        

        if([dic objectForKey: @"proxyAddresses"] != [NSNull null]){
            _proxyAddresses = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"proxyAddresses"] count]];
            
            for (id object in [dic objectForKey: @"proxyAddresses"]) {
                [_proxyAddresses addObject:[object copy]];
            }
        }
        
		_sipProxyAddress = [dic objectForKey: @"sipProxyAddress"] != nil ? [[dic objectForKey: @"sipProxyAddress"] copy] : _sipProxyAddress;
		_state = [dic objectForKey: @"state"] != nil ? [[dic objectForKey: @"state"] copy] : _state;
		_streetAddress = [dic objectForKey: @"streetAddress"] != nil ? [[dic objectForKey: @"streetAddress"] copy] : _streetAddress;
		_surname = [dic objectForKey: @"surname"] != nil ? [[dic objectForKey: @"surname"] copy] : _surname;
		_telephoneNumber = [dic objectForKey: @"telephoneNumber"] != nil ? [[dic objectForKey: @"telephoneNumber"] copy] : _telephoneNumber;
		_thumbnailPhoto = [dic objectForKey: @"thumbnailPhoto"] != nil ? nil/*NSStream*/ : _thumbnailPhoto;

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [_city copy], @"city",
		 [_country copy], @"country",
		 [_department copy], @"department",
		 (_dirSyncEnabled?@"true":@"false"), @"dirSyncEnabled",
		 [_displayName copy], @"displayName",
		 [_facsimileTelephoneNumber copy], @"facsimileTelephoneNumber",
		 [_givenName copy], @"givenName",
		 [_jobTitle copy], @"jobTitle",
		 [MSOrcObjectizer stringFromDate:_lastDirSyncTime], @"lastDirSyncTime",
		 [_mail copy], @"mail",
		 [_mailNickname copy], @"mailNickname",
		 [_mobile copy], @"mobile",
		 [_physicalDeliveryOfficeName copy], @"physicalDeliveryOfficeName",
		 [_postalCode copy], @"postalCode",
		 [[NSMutableArray alloc] init], @"provisioningErrors",
		 [[NSMutableArray alloc] init], @"proxyAddresses",
		 [_sipProxyAddress copy], @"sipProxyAddress",
		 [_state copy], @"state",
		 [_streetAddress copy], @"streetAddress",
		 [_surname copy], @"surname",
		 [_telephoneNumber copy], @"telephoneNumber",
		 nil/*NSStream*/, @"thumbnailPhoto",
            nil];
}


/** Setter implementation for property city
 *
 */
- (void) setCity: (NSString *) value {
    _city = value;
    [self valueChangedFor:@"city"];
}
       
/** Setter implementation for property country
 *
 */
- (void) setCountry: (NSString *) value {
    _country = value;
    [self valueChangedFor:@"country"];
}
       
/** Setter implementation for property department
 *
 */
- (void) setDepartment: (NSString *) value {
    _department = value;
    [self valueChangedFor:@"department"];
}
       
/** Setter implementation for property dirSyncEnabled
 *
 */
- (void) setDirSyncEnabled: (bool) value {
    _dirSyncEnabled = value;
    [self valueChangedFor:@"dirSyncEnabled"];
}
       
/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChangedFor:@"displayName"];
}
       
/** Setter implementation for property facsimileTelephoneNumber
 *
 */
- (void) setFacsimileTelephoneNumber: (NSString *) value {
    _facsimileTelephoneNumber = value;
    [self valueChangedFor:@"facsimileTelephoneNumber"];
}
       
/** Setter implementation for property givenName
 *
 */
- (void) setGivenName: (NSString *) value {
    _givenName = value;
    [self valueChangedFor:@"givenName"];
}
       
/** Setter implementation for property jobTitle
 *
 */
- (void) setJobTitle: (NSString *) value {
    _jobTitle = value;
    [self valueChangedFor:@"jobTitle"];
}
       
/** Setter implementation for property lastDirSyncTime
 *
 */
- (void) setLastDirSyncTime: (NSDate *) value {
    _lastDirSyncTime = value;
    [self valueChangedFor:@"lastDirSyncTime"];
}
       
/** Setter implementation for property mail
 *
 */
- (void) setMail: (NSString *) value {
    _mail = value;
    [self valueChangedFor:@"mail"];
}
       
/** Setter implementation for property mailNickname
 *
 */
- (void) setMailNickname: (NSString *) value {
    _mailNickname = value;
    [self valueChangedFor:@"mailNickname"];
}
       
/** Setter implementation for property mobile
 *
 */
- (void) setMobile: (NSString *) value {
    _mobile = value;
    [self valueChangedFor:@"mobile"];
}
       
/** Setter implementation for property physicalDeliveryOfficeName
 *
 */
- (void) setPhysicalDeliveryOfficeName: (NSString *) value {
    _physicalDeliveryOfficeName = value;
    [self valueChangedFor:@"physicalDeliveryOfficeName"];
}
       
/** Setter implementation for property postalCode
 *
 */
- (void) setPostalCode: (NSString *) value {
    _postalCode = value;
    [self valueChangedFor:@"postalCode"];
}
       
/** Setter implementation for property provisioningErrors
 *
 */
- (void) setProvisioningErrors: (NSMutableArray *) value {
    _provisioningErrors = value;
    [self valueChangedFor:@"provisioningErrors"];
}
       
/** Setter implementation for property proxyAddresses
 *
 */
- (void) setProxyAddresses: (NSMutableArray *) value {
    _proxyAddresses = value;
    [self valueChangedFor:@"proxyAddresses"];
}
       
/** Setter implementation for property sipProxyAddress
 *
 */
- (void) setSipProxyAddress: (NSString *) value {
    _sipProxyAddress = value;
    [self valueChangedFor:@"sipProxyAddress"];
}
       
/** Setter implementation for property state
 *
 */
- (void) setState: (NSString *) value {
    _state = value;
    [self valueChangedFor:@"state"];
}
       
/** Setter implementation for property streetAddress
 *
 */
- (void) setStreetAddress: (NSString *) value {
    _streetAddress = value;
    [self valueChangedFor:@"streetAddress"];
}
       
/** Setter implementation for property surname
 *
 */
- (void) setSurname: (NSString *) value {
    _surname = value;
    [self valueChangedFor:@"surname"];
}
       
/** Setter implementation for property telephoneNumber
 *
 */
- (void) setTelephoneNumber: (NSString *) value {
    _telephoneNumber = value;
    [self valueChangedFor:@"telephoneNumber"];
}
       
/** Setter implementation for property thumbnailPhoto
 *
 */
- (void) setThumbnailPhoto: (NSStream *) value {
    _thumbnailPhoto = value;
    [self valueChangedFor:@"thumbnailPhoto"];
}
       

@end
