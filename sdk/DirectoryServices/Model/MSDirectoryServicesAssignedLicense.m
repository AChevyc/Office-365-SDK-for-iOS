/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSDirectoryServicesModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSDirectoryServicesAssignedLicense
 *
 */
@implementation MSDirectoryServicesAssignedLicense


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"disabledPlans", @"disabledPlans", @"skuId", @"skuId", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.DirectoryServices.AssignedLicense";

        
		_disabledPlans = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    

        if([dic objectForKey: @"disabledPlans"] != [NSNull null]){
            _disabledPlans = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"disabledPlans"] count]];
            
            for (id object in [dic objectForKey: @"disabledPlans"]) {
                [_disabledPlans addObject:[object copy]];
            }
        }
        
		_skuId = [dic objectForKey: @"skuId"] != nil ? [[dic objectForKey: @"skuId"] copy] : _skuId;

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = nil/*MUST SERIALIZE COLLECTION!*/; if (curVal!=nil) [dic setValue: curVal forKey: @"disabledPlans"];}
	{id curVal = [self.skuId copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"skuId"];}
    [dic setValue: @"#Microsoft.DirectoryServices.AssignedLicense" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.disabledPlans;
    if([self.updatedValues containsObject:@"disabledPlans"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"disabledPlans"];
    }
        else
    {
                
        //Check collection change:
        
            }}
	{id curVal = self.skuId;
    if([self.updatedValues containsObject:@"skuId"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"skuId"];
    }
    }
    return dic;
}


/** Setter implementation for property disabledPlans
 *
 */
- (void) setDisabledPlans: (NSMutableArray *) value {
    _disabledPlans = value;
    [self valueChangedFor:@"disabledPlans"];
}
       
/** Setter implementation for property skuId
 *
 */
- (void) setSkuId: (NSString *) value {
    _skuId = value;
    [self valueChangedFor:@"skuId"];
}
       

@end
