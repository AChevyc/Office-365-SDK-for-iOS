/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSDirectoryServicesModels.h"



/** Implementation for MSDirectoryServicesOAuth2PermissionGrant
 *
 */
@implementation MSDirectoryServicesOAuth2PermissionGrant


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"clientId", @"clientId", @"consentType", @"consentType", @"expiryTime", @"expiryTime", @"objectId", @"objectId", @"principalId", @"principalId", @"resourceId", @"resourceId", @"scope", @"scope", @"startTime", @"startTime", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.DirectoryServices.OAuth2PermissionGrant";
        
        
    }

	return self;
}

/** Setter implementation for property clientId
 *
 */
- (void) setClientId: (NSString *) value {
    _clientId = value;
    [self valueChanged:_clientId forProperty:@"clientId"];
}
       
/** Setter implementation for property consentType
 *
 */
- (void) setConsentType: (NSString *) value {
    _consentType = value;
    [self valueChanged:_consentType forProperty:@"consentType"];
}
       
/** Setter implementation for property expiryTime
 *
 */
- (void) setExpiryTime: (NSDate *) value {
    _expiryTime = value;
    [self valueChanged:_expiryTime forProperty:@"expiryTime"];
}
       
/** Setter implementation for property objectId
 *
 */
- (void) setObjectId: (NSString *) value {
    _objectId = value;
    [self valueChanged:_objectId forProperty:@"objectId"];
}
       
/** Setter implementation for property principalId
 *
 */
- (void) setPrincipalId: (NSString *) value {
    _principalId = value;
    [self valueChanged:_principalId forProperty:@"principalId"];
}
       
/** Setter implementation for property resourceId
 *
 */
- (void) setResourceId: (NSString *) value {
    _resourceId = value;
    [self valueChanged:_resourceId forProperty:@"resourceId"];
}
       
/** Setter implementation for property scope
 *
 */
- (void) setScope: (NSString *) value {
    _scope = value;
    [self valueChanged:_scope forProperty:@"scope"];
}
       
/** Setter implementation for property startTime
 *
 */
- (void) setStartTime: (NSDate *) value {
    _startTime = value;
    [self valueChanged:_startTime forProperty:@"startTime"];
}
       

@end
