/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphExtensionProperty
 *
 */
@implementation MSGraphExtensionProperty


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"appDisplayName", @"appDisplayName", @"name", @"name", @"dataType", @"dataType", @"isSyncedFromOnPremises", @"isSyncedFromOnPremises", @"targetObjects", @"targetObjects", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.ExtensionProperty";
        
        
		_targetObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_appDisplayName = [dic objectForKey: @"appDisplayName"] != nil ? [[dic objectForKey: @"appDisplayName"] copy] : _appDisplayName;
		_name = [dic objectForKey: @"name"] != nil ? [[dic objectForKey: @"name"] copy] : _name;
		_dataType = [dic objectForKey: @"dataType"] != nil ? [[dic objectForKey: @"dataType"] copy] : _dataType;
		_isSyncedFromOnPremises = [dic objectForKey: @"isSyncedFromOnPremises"] != nil ? [[dic objectForKey: @"isSyncedFromOnPremises"] boolValue] : _isSyncedFromOnPremises;

        if([dic objectForKey: @"targetObjects"] != [NSNull null]){
            _targetObjects = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"targetObjects"] count]];
            
            for (id object in [dic objectForKey: @"targetObjects"]) {
                [_targetObjects addObject:[object copy]];
            }
        }
        
		self.objectType = [dic objectForKey: @"objectType"] != nil ? [[dic objectForKey: @"objectType"] copy] : self.objectType;
		self.objectId = [dic objectForKey: @"objectId"] != nil ? [[dic objectForKey: @"objectId"] copy] : self.objectId;
		self.deletionTimestamp = [dic objectForKey: @"deletionTimestamp"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"deletionTimestamp"]] : self.deletionTimestamp;

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.appDisplayName copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"appDisplayName"];}
	{id curVal = [self.name copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"name"];}
	{id curVal = [self.dataType copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"dataType"];}
	{id curVal = (self.isSyncedFromOnPremises?@"true":@"false"); if (curVal!=nil) [dic setValue: curVal forKey: @"isSyncedFromOnPremises"];}
	{id curVal = nil/*MUST SERIALIZE COLLECTION!*/; if (curVal!=nil) [dic setValue: curVal forKey: @"targetObjects"];}
	{id curVal = [self.objectType copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"objectType"];}
	{id curVal = [self.objectId copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"objectId"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.deletionTimestamp]; if (curVal!=nil) [dic setValue: curVal forKey: @"deletionTimestamp"];}
    [dic setValue: @"#Microsoft.Graph.ExtensionProperty" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.appDisplayName;
    if([self.updatedValues containsObject:@"appDisplayName"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"appDisplayName"];
    }
    }
	{id curVal = self.name;
    if([self.updatedValues containsObject:@"name"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"name"];
    }
    }
	{id curVal = self.dataType;
    if([self.updatedValues containsObject:@"dataType"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"dataType"];
    }
    }
	{id curVal = self.isSyncedFromOnPremises;
    if([self.updatedValues containsObject:@"isSyncedFromOnPremises"])
    {
        [dic setValue: curVal==nil?[NSNull null]:(curVal?@"true":@"false") forKey: @"isSyncedFromOnPremises"];
    }
    }
	{id curVal = self.targetObjects;
    if([self.updatedValues containsObject:@"targetObjects"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"targetObjects"];
    }
        else
    {
                
        //Check collection change:
        
            }}
	{id curVal = self.objectType;
    if([self.updatedValues containsObject:@"objectType"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"objectType"];
    }
    }
	{id curVal = self.objectId;
    if([self.updatedValues containsObject:@"objectId"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"objectId"];
    }
    }
	{id curVal = self.deletionTimestamp;
    if([self.updatedValues containsObject:@"deletionTimestamp"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"deletionTimestamp"];
    }
    }
    return dic;
}


/** Setter implementation for property appDisplayName
 *
 */
- (void) setAppDisplayName: (NSString *) value {
    _appDisplayName = value;
    [self valueChangedFor:@"appDisplayName"];
}
       
/** Setter implementation for property name
 *
 */
- (void) setName: (NSString *) value {
    _name = value;
    [self valueChangedFor:@"name"];
}
       
/** Setter implementation for property dataType
 *
 */
- (void) setDataType: (NSString *) value {
    _dataType = value;
    [self valueChangedFor:@"dataType"];
}
       
/** Setter implementation for property isSyncedFromOnPremises
 *
 */
- (void) setIsSyncedFromOnPremises: (bool) value {
    _isSyncedFromOnPremises = value;
    [self valueChangedFor:@"isSyncedFromOnPremises"];
}
       
/** Setter implementation for property targetObjects
 *
 */
- (void) setTargetObjects: (NSMutableArray *) value {
    _targetObjects = value;
    [self valueChangedFor:@"targetObjects"];
}
       

@end
