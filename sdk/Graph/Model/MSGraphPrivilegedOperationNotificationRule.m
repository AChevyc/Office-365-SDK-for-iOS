/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphPrivilegedOperationNotificationRule
 *
 */
@implementation MSGraphPrivilegedOperationNotificationRule


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"Id", @"_id", @"UserName", @"userName", @"UserId", @"userId", @"RoleName", @"roleName", @"RoleId", @"roleId", @"NotificationId", @"notificationId", @"NotificationName", @"notificationName", @"Event", @"event", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.PrivilegedOperationNotificationRule";
        
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		__id = [dic objectForKey: @"Id"] != nil ? [[dic objectForKey: @"Id"] copy] : __id;
		_userName = [dic objectForKey: @"UserName"] != nil ? [[dic objectForKey: @"UserName"] copy] : _userName;
		_userId = [dic objectForKey: @"UserId"] != nil ? [[dic objectForKey: @"UserId"] copy] : _userId;
		_roleName = [dic objectForKey: @"RoleName"] != nil ? [[dic objectForKey: @"RoleName"] copy] : _roleName;
		_roleId = [dic objectForKey: @"RoleId"] != nil ? [[dic objectForKey: @"RoleId"] copy] : _roleId;
		_notificationId = [dic objectForKey: @"NotificationId"] != nil ? [[dic objectForKey: @"NotificationId"] copy] : _notificationId;
		_notificationName = [dic objectForKey: @"NotificationName"] != nil ? [[dic objectForKey: @"NotificationName"] copy] : _notificationName;
		_event = [dic objectForKey: @"Event"] != nil ? [[dic objectForKey: @"Event"] copy] : _event;

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [__id copy], @"Id",
		 [_userName copy], @"UserName",
		 [_userId copy], @"UserId",
		 [_roleName copy], @"RoleName",
		 [_roleId copy], @"RoleId",
		 [_notificationId copy], @"NotificationId",
		 [_notificationName copy], @"NotificationName",
		 [_event copy], @"Event",
            nil];
}


/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChangedFor:@"Id"];
}
       
/** Setter implementation for property userName
 *
 */
- (void) setUserName: (NSString *) value {
    _userName = value;
    [self valueChangedFor:@"UserName"];
}
       
/** Setter implementation for property userId
 *
 */
- (void) setUserId: (NSString *) value {
    _userId = value;
    [self valueChangedFor:@"UserId"];
}
       
/** Setter implementation for property roleName
 *
 */
- (void) setRoleName: (NSString *) value {
    _roleName = value;
    [self valueChangedFor:@"RoleName"];
}
       
/** Setter implementation for property roleId
 *
 */
- (void) setRoleId: (NSString *) value {
    _roleId = value;
    [self valueChangedFor:@"RoleId"];
}
       
/** Setter implementation for property notificationId
 *
 */
- (void) setNotificationId: (NSString *) value {
    _notificationId = value;
    [self valueChangedFor:@"NotificationId"];
}
       
/** Setter implementation for property notificationName
 *
 */
- (void) setNotificationName: (NSString *) value {
    _notificationName = value;
    [self valueChangedFor:@"NotificationName"];
}
       
/** Setter implementation for property event
 *
 */
- (void) setEvent: (NSString *) value {
    _event = value;
    [self valueChangedFor:@"Event"];
}
       

@end
