/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphCopyNotebookModel
 *
 */
@implementation MSGraphCopyNotebookModel


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"isDefault", @"isDefault", @"userRole", @"userRole", @"isShared", @"isShared", @"sectionsUrl", @"sectionsUrl", @"sectionGroupsUrl", @"sectionGroupsUrl", @"links", @"links", @"name", @"name", @"createdBy", @"createdBy", @"lastModifiedBy", @"lastModifiedBy", @"lastModifiedTime", @"lastModifiedTime", @"id", @"_id", @"self", @"_self", @"createdTime", @"createdTime", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.CopyNotebookModel";

    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_isDefault = [dic objectForKey: @"isDefault"] != nil ? [[dic objectForKey: @"isDefault"] boolValue] : _isDefault;
		_userRole = [dic objectForKey: @"userRole"] != nil ? [MSGraphUserRoleSerializer fromString:[dic objectForKey: @"userRole"]] : _userRole;
		_isShared = [dic objectForKey: @"isShared"] != nil ? [[dic objectForKey: @"isShared"] boolValue] : _isShared;
		_sectionsUrl = [dic objectForKey: @"sectionsUrl"] != nil ? [[dic objectForKey: @"sectionsUrl"] copy] : _sectionsUrl;
		_sectionGroupsUrl = [dic objectForKey: @"sectionGroupsUrl"] != nil ? [[dic objectForKey: @"sectionGroupsUrl"] copy] : _sectionGroupsUrl;
		_links = [dic objectForKey: @"links"] != nil ? [[MSGraphNotebookLinks alloc] initWithDictionary: [dic objectForKey: @"links"]] : _links;
		_name = [dic objectForKey: @"name"] != nil ? [[dic objectForKey: @"name"] copy] : _name;
		_createdBy = [dic objectForKey: @"createdBy"] != nil ? [[dic objectForKey: @"createdBy"] copy] : _createdBy;
		_lastModifiedBy = [dic objectForKey: @"lastModifiedBy"] != nil ? [[dic objectForKey: @"lastModifiedBy"] copy] : _lastModifiedBy;
		_lastModifiedTime = [dic objectForKey: @"lastModifiedTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"lastModifiedTime"]] : _lastModifiedTime;
		__id = [dic objectForKey: @"id"] != nil ? [[dic objectForKey: @"id"] copy] : __id;
		__self = [dic objectForKey: @"self"] != nil ? [[dic objectForKey: @"self"] copy] : __self;
		_createdTime = [dic objectForKey: @"createdTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"createdTime"]] : _createdTime;

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{[dic setValue: (self.isDefault?@"true":@"false") forKey: @"isDefault"];}
	{[dic setValue: [MSGraphUserRoleSerializer toString:self.userRole] forKey: @"userRole"];}
	{[dic setValue: (self.isShared?@"true":@"false") forKey: @"isShared"];}
	{id curVal = [self.sectionsUrl copy];if (curVal!=nil) [dic setValue: curVal forKey: @"sectionsUrl"];}
	{id curVal = [self.sectionGroupsUrl copy];if (curVal!=nil) [dic setValue: curVal forKey: @"sectionGroupsUrl"];}
	{id curVal = [self.links toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"links"];}
	{id curVal = [self.name copy];if (curVal!=nil) [dic setValue: curVal forKey: @"name"];}
	{id curVal = [self.createdBy copy];if (curVal!=nil) [dic setValue: curVal forKey: @"createdBy"];}
	{id curVal = [self.lastModifiedBy copy];if (curVal!=nil) [dic setValue: curVal forKey: @"lastModifiedBy"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.lastModifiedTime];if (curVal!=nil) [dic setValue: curVal forKey: @"lastModifiedTime"];}
	{id curVal = [self._id copy];if (curVal!=nil) [dic setValue: curVal forKey: @"id"];}
	{id curVal = [self._self copy];if (curVal!=nil) [dic setValue: curVal forKey: @"self"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.createdTime];if (curVal!=nil) [dic setValue: curVal forKey: @"createdTime"];}
    [dic setValue: @"#microsoft.graph.CopyNotebookModel" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.isDefault;
    if([self.updatedValues containsObject:@"isDefault"])
    {
                [dic setValue: curVal==nil?[NSNull null]:(curVal?@"true":@"false") forKey: @"isDefault"];
            }
    }
	{id curVal = self.userRole;
    if([self.updatedValues containsObject:@"userRole"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSGraphUserRoleSerializer toString:curVal] forKey: @"userRole"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"userRole"];
            }
        
            }}
	{id curVal = self.isShared;
    if([self.updatedValues containsObject:@"isShared"])
    {
                [dic setValue: curVal==nil?[NSNull null]:(curVal?@"true":@"false") forKey: @"isShared"];
            }
    }
	{id curVal = self.sectionsUrl;
    if([self.updatedValues containsObject:@"sectionsUrl"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"sectionsUrl"];
            }
    }
	{id curVal = self.sectionGroupsUrl;
    if([self.updatedValues containsObject:@"sectionGroupsUrl"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"sectionGroupsUrl"];
            }
    }
	{id curVal = self.links;
    if([self.updatedValues containsObject:@"links"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"links"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"links"];
            }
        
            }}
	{id curVal = self.name;
    if([self.updatedValues containsObject:@"name"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"name"];
            }
    }
	{id curVal = self.createdBy;
    if([self.updatedValues containsObject:@"createdBy"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"createdBy"];
            }
    }
	{id curVal = self.lastModifiedBy;
    if([self.updatedValues containsObject:@"lastModifiedBy"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"lastModifiedBy"];
            }
    }
	{id curVal = self.lastModifiedTime;
    if([self.updatedValues containsObject:@"lastModifiedTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"lastModifiedTime"];
            }
    }
	{id curVal = self._id;
    if([self.updatedValues containsObject:@"id"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"id"];
            }
    }
	{id curVal = self._self;
    if([self.updatedValues containsObject:@"self"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"self"];
            }
    }
	{id curVal = self.createdTime;
    if([self.updatedValues containsObject:@"createdTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"createdTime"];
            }
    }
    return dic;
}


/** Setter implementation for property isDefault
 *
 */
- (void) setIsDefault: (bool) value {
    _isDefault = value;
    [self valueChangedFor:@"isDefault"];
}
       
/** Setter implementation for property userRole
 *
 */
- (void) setUserRole: (MSGraphUserRole) value {
    _userRole = value;
    [self valueChangedFor:@"userRole"];
}
       

- (void)setUserRoleString:(NSString *)string {
        
    _userRole = [MSGraphUserRoleSerializer fromString:string];
    [self valueChangedFor:@"userRole"]; 
}

/** Setter implementation for property isShared
 *
 */
- (void) setIsShared: (bool) value {
    _isShared = value;
    [self valueChangedFor:@"isShared"];
}
       
/** Setter implementation for property sectionsUrl
 *
 */
- (void) setSectionsUrl: (NSString *) value {
    _sectionsUrl = value;
    [self valueChangedFor:@"sectionsUrl"];
}
       
/** Setter implementation for property sectionGroupsUrl
 *
 */
- (void) setSectionGroupsUrl: (NSString *) value {
    _sectionGroupsUrl = value;
    [self valueChangedFor:@"sectionGroupsUrl"];
}
       
/** Setter implementation for property links
 *
 */
- (void) setLinks: (MSGraphNotebookLinks *) value {
    _links = value;
    [self valueChangedFor:@"links"];
}
       
/** Setter implementation for property name
 *
 */
- (void) setName: (NSString *) value {
    _name = value;
    [self valueChangedFor:@"name"];
}
       
/** Setter implementation for property createdBy
 *
 */
- (void) setCreatedBy: (NSString *) value {
    _createdBy = value;
    [self valueChangedFor:@"createdBy"];
}
       
/** Setter implementation for property lastModifiedBy
 *
 */
- (void) setLastModifiedBy: (NSString *) value {
    _lastModifiedBy = value;
    [self valueChangedFor:@"lastModifiedBy"];
}
       
/** Setter implementation for property lastModifiedTime
 *
 */
- (void) setLastModifiedTime: (NSDate *) value {
    _lastModifiedTime = value;
    [self valueChangedFor:@"lastModifiedTime"];
}
       
/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChangedFor:@"id"];
}
       
/** Setter implementation for property _self
 *
 */
- (void) setSelf: (NSString *) value {
    __self = value;
    [self valueChangedFor:@"self"];
}
       
/** Setter implementation for property createdTime
 *
 */
- (void) setCreatedTime: (NSDate *) value {
    _createdTime = value;
    [self valueChangedFor:@"createdTime"];
}
       

@end
