/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphUser
 *
 */
@implementation MSGraphUser


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"accountEnabled", @"accountEnabled", @"assignedLicenses", @"assignedLicenses", @"assignedPlans", @"assignedPlans", @"city", @"city", @"country", @"country", @"department", @"department", @"dirSyncEnabled", @"dirSyncEnabled", @"displayName", @"displayName", @"facsimileTelephoneNumber", @"facsimileTelephoneNumber", @"givenName", @"givenName", @"immutableId", @"immutableId", @"jobTitle", @"jobTitle", @"lastDirSyncTime", @"lastDirSyncTime", @"mail", @"mail", @"mailNickname", @"mailNickname", @"mobile", @"mobile", @"onPremisesSecurityIdentifier", @"onPremisesSecurityIdentifier", @"otherMails", @"otherMails", @"passwordPolicies", @"passwordPolicies", @"passwordProfile", @"passwordProfile", @"physicalDeliveryOfficeName", @"physicalDeliveryOfficeName", @"postalCode", @"postalCode", @"preferredLanguage", @"preferredLanguage", @"provisionedPlans", @"provisionedPlans", @"provisioningErrors", @"provisioningErrors", @"proxyAddresses", @"proxyAddresses", @"sipProxyAddress", @"sipProxyAddress", @"state", @"state", @"streetAddress", @"streetAddress", @"surname", @"surname", @"telephoneNumber", @"telephoneNumber", @"thumbnailPhoto", @"thumbnailPhoto", @"usageLocation", @"usageLocation", @"userPrincipalName", @"userPrincipalName", @"userType", @"userType", @"MailboxGuid", @"mailboxGuid", @"AboutMe", @"aboutMe", @"Alias", @"alias", @"Birthday", @"birthday", @"HireDate", @"hireDate", @"Interests", @"interests", @"MySite", @"mySite", @"PastProjects", @"pastProjects", @"PreferredName", @"preferredName", @"PrincipalName", @"principalName", @"Responsibilities", @"responsibilities", @"Schools", @"schools", @"Skills", @"skills", @"Tags", @"tags", @"appRoleAssignments", @"appRoleAssignments", @"oauth2PermissionGrants", @"oauth2PermissionGrants", @"ownedDevices", @"ownedDevices", @"registeredDevices", @"registeredDevices", @"manager", @"manager", @"directReports", @"directReports", @"memberOf", @"memberOf", @"createdObjects", @"createdObjects", @"ownedObjects", @"ownedObjects", @"Messages", @"messages", @"Calendars", @"calendars", @"Calendar", @"calendar", @"CalendarGroups", @"calendarGroups", @"Events", @"events", @"CalendarView", @"calendarView", @"UserPhoto", @"userPhoto", @"UserPhotos", @"userPhotos", @"TrendingAround", @"trendingAround", @"WorkingWith", @"workingWith", @"JoinedGroups", @"joinedGroups", @"drive", @"drive", @"files", @"files", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.User";
        
        
		_assignedLicenses = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_assignedPlans = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_otherMails = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_provisionedPlans = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_provisioningErrors = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_proxyAddresses = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_interests = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_pastProjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_responsibilities = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_schools = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_skills = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_tags = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_appRoleAssignments = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_oauth2PermissionGrants = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_ownedDevices = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_registeredDevices = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_directReports = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_memberOf = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_createdObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_ownedObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_messages = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_calendars = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_calendarGroups = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_events = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_calendarView = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_userPhotos = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_trendingAround = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_workingWith = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_joinedGroups = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_files = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property accountEnabled
 *
 */
- (void) setAccountEnabled: (bool) value {
    _accountEnabled = value;
    [self valueChangedForBool:_accountEnabled forProperty:@"accountEnabled"];
}
       
/** Setter implementation for property assignedLicenses
 *
 */
- (void) setAssignedLicenses: (NSMutableArray *) value {
    _assignedLicenses = value;
    [self valueChanged:_assignedLicenses forProperty:@"assignedLicenses"];
}
       
/** Setter implementation for property assignedPlans
 *
 */
- (void) setAssignedPlans: (NSMutableArray *) value {
    _assignedPlans = value;
    [self valueChanged:_assignedPlans forProperty:@"assignedPlans"];
}
       
/** Setter implementation for property city
 *
 */
- (void) setCity: (NSString *) value {
    _city = value;
    [self valueChanged:_city forProperty:@"city"];
}
       
/** Setter implementation for property country
 *
 */
- (void) setCountry: (NSString *) value {
    _country = value;
    [self valueChanged:_country forProperty:@"country"];
}
       
/** Setter implementation for property department
 *
 */
- (void) setDepartment: (NSString *) value {
    _department = value;
    [self valueChanged:_department forProperty:@"department"];
}
       
/** Setter implementation for property dirSyncEnabled
 *
 */
- (void) setDirSyncEnabled: (bool) value {
    _dirSyncEnabled = value;
    [self valueChangedForBool:_dirSyncEnabled forProperty:@"dirSyncEnabled"];
}
       
/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChanged:_displayName forProperty:@"displayName"];
}
       
/** Setter implementation for property facsimileTelephoneNumber
 *
 */
- (void) setFacsimileTelephoneNumber: (NSString *) value {
    _facsimileTelephoneNumber = value;
    [self valueChanged:_facsimileTelephoneNumber forProperty:@"facsimileTelephoneNumber"];
}
       
/** Setter implementation for property givenName
 *
 */
- (void) setGivenName: (NSString *) value {
    _givenName = value;
    [self valueChanged:_givenName forProperty:@"givenName"];
}
       
/** Setter implementation for property immutableId
 *
 */
- (void) setImmutableId: (NSString *) value {
    _immutableId = value;
    [self valueChanged:_immutableId forProperty:@"immutableId"];
}
       
/** Setter implementation for property jobTitle
 *
 */
- (void) setJobTitle: (NSString *) value {
    _jobTitle = value;
    [self valueChanged:_jobTitle forProperty:@"jobTitle"];
}
       
/** Setter implementation for property lastDirSyncTime
 *
 */
- (void) setLastDirSyncTime: (NSDate *) value {
    _lastDirSyncTime = value;
    [self valueChanged:_lastDirSyncTime forProperty:@"lastDirSyncTime"];
}
       
/** Setter implementation for property mail
 *
 */
- (void) setMail: (NSString *) value {
    _mail = value;
    [self valueChanged:_mail forProperty:@"mail"];
}
       
/** Setter implementation for property mailNickname
 *
 */
- (void) setMailNickname: (NSString *) value {
    _mailNickname = value;
    [self valueChanged:_mailNickname forProperty:@"mailNickname"];
}
       
/** Setter implementation for property mobile
 *
 */
- (void) setMobile: (NSString *) value {
    _mobile = value;
    [self valueChanged:_mobile forProperty:@"mobile"];
}
       
/** Setter implementation for property onPremisesSecurityIdentifier
 *
 */
- (void) setOnPremisesSecurityIdentifier: (NSString *) value {
    _onPremisesSecurityIdentifier = value;
    [self valueChanged:_onPremisesSecurityIdentifier forProperty:@"onPremisesSecurityIdentifier"];
}
       
/** Setter implementation for property otherMails
 *
 */
- (void) setOtherMails: (NSMutableArray *) value {
    _otherMails = value;
    [self valueChanged:_otherMails forProperty:@"otherMails"];
}
       
/** Setter implementation for property passwordPolicies
 *
 */
- (void) setPasswordPolicies: (NSString *) value {
    _passwordPolicies = value;
    [self valueChanged:_passwordPolicies forProperty:@"passwordPolicies"];
}
       
/** Setter implementation for property passwordProfile
 *
 */
- (void) setPasswordProfile: (MSGraphPasswordProfile *) value {
    _passwordProfile = value;
    [self valueChanged:_passwordProfile forProperty:@"passwordProfile"];
}
       
/** Setter implementation for property physicalDeliveryOfficeName
 *
 */
- (void) setPhysicalDeliveryOfficeName: (NSString *) value {
    _physicalDeliveryOfficeName = value;
    [self valueChanged:_physicalDeliveryOfficeName forProperty:@"physicalDeliveryOfficeName"];
}
       
/** Setter implementation for property postalCode
 *
 */
- (void) setPostalCode: (NSString *) value {
    _postalCode = value;
    [self valueChanged:_postalCode forProperty:@"postalCode"];
}
       
/** Setter implementation for property preferredLanguage
 *
 */
- (void) setPreferredLanguage: (NSString *) value {
    _preferredLanguage = value;
    [self valueChanged:_preferredLanguage forProperty:@"preferredLanguage"];
}
       
/** Setter implementation for property provisionedPlans
 *
 */
- (void) setProvisionedPlans: (NSMutableArray *) value {
    _provisionedPlans = value;
    [self valueChanged:_provisionedPlans forProperty:@"provisionedPlans"];
}
       
/** Setter implementation for property provisioningErrors
 *
 */
- (void) setProvisioningErrors: (NSMutableArray *) value {
    _provisioningErrors = value;
    [self valueChanged:_provisioningErrors forProperty:@"provisioningErrors"];
}
       
/** Setter implementation for property proxyAddresses
 *
 */
- (void) setProxyAddresses: (NSMutableArray *) value {
    _proxyAddresses = value;
    [self valueChanged:_proxyAddresses forProperty:@"proxyAddresses"];
}
       
/** Setter implementation for property sipProxyAddress
 *
 */
- (void) setSipProxyAddress: (NSString *) value {
    _sipProxyAddress = value;
    [self valueChanged:_sipProxyAddress forProperty:@"sipProxyAddress"];
}
       
/** Setter implementation for property state
 *
 */
- (void) setState: (NSString *) value {
    _state = value;
    [self valueChanged:_state forProperty:@"state"];
}
       
/** Setter implementation for property streetAddress
 *
 */
- (void) setStreetAddress: (NSString *) value {
    _streetAddress = value;
    [self valueChanged:_streetAddress forProperty:@"streetAddress"];
}
       
/** Setter implementation for property surname
 *
 */
- (void) setSurname: (NSString *) value {
    _surname = value;
    [self valueChanged:_surname forProperty:@"surname"];
}
       
/** Setter implementation for property telephoneNumber
 *
 */
- (void) setTelephoneNumber: (NSString *) value {
    _telephoneNumber = value;
    [self valueChanged:_telephoneNumber forProperty:@"telephoneNumber"];
}
       
/** Setter implementation for property thumbnailPhoto
 *
 */
- (void) setThumbnailPhoto: (NSStream *) value {
    _thumbnailPhoto = value;
    [self valueChanged:_thumbnailPhoto forProperty:@"thumbnailPhoto"];
}
       
/** Setter implementation for property usageLocation
 *
 */
- (void) setUsageLocation: (NSString *) value {
    _usageLocation = value;
    [self valueChanged:_usageLocation forProperty:@"usageLocation"];
}
       
/** Setter implementation for property userPrincipalName
 *
 */
- (void) setUserPrincipalName: (NSString *) value {
    _userPrincipalName = value;
    [self valueChanged:_userPrincipalName forProperty:@"userPrincipalName"];
}
       
/** Setter implementation for property userType
 *
 */
- (void) setUserType: (NSString *) value {
    _userType = value;
    [self valueChanged:_userType forProperty:@"userType"];
}
       
/** Setter implementation for property mailboxGuid
 *
 */
- (void) setMailboxGuid: (NSString *) value {
    _mailboxGuid = value;
    [self valueChanged:_mailboxGuid forProperty:@"MailboxGuid"];
}
       
/** Setter implementation for property aboutMe
 *
 */
- (void) setAboutMe: (NSString *) value {
    _aboutMe = value;
    [self valueChanged:_aboutMe forProperty:@"AboutMe"];
}
       
/** Setter implementation for property alias
 *
 */
- (void) setAlias: (NSString *) value {
    _alias = value;
    [self valueChanged:_alias forProperty:@"Alias"];
}
       
/** Setter implementation for property birthday
 *
 */
- (void) setBirthday: (NSDate *) value {
    _birthday = value;
    [self valueChanged:_birthday forProperty:@"Birthday"];
}
       
/** Setter implementation for property hireDate
 *
 */
- (void) setHireDate: (NSDate *) value {
    _hireDate = value;
    [self valueChanged:_hireDate forProperty:@"HireDate"];
}
       
/** Setter implementation for property interests
 *
 */
- (void) setInterests: (NSMutableArray *) value {
    _interests = value;
    [self valueChanged:_interests forProperty:@"Interests"];
}
       
/** Setter implementation for property mySite
 *
 */
- (void) setMySite: (NSString *) value {
    _mySite = value;
    [self valueChanged:_mySite forProperty:@"MySite"];
}
       
/** Setter implementation for property pastProjects
 *
 */
- (void) setPastProjects: (NSMutableArray *) value {
    _pastProjects = value;
    [self valueChanged:_pastProjects forProperty:@"PastProjects"];
}
       
/** Setter implementation for property preferredName
 *
 */
- (void) setPreferredName: (NSString *) value {
    _preferredName = value;
    [self valueChanged:_preferredName forProperty:@"PreferredName"];
}
       
/** Setter implementation for property principalName
 *
 */
- (void) setPrincipalName: (NSString *) value {
    _principalName = value;
    [self valueChanged:_principalName forProperty:@"PrincipalName"];
}
       
/** Setter implementation for property responsibilities
 *
 */
- (void) setResponsibilities: (NSMutableArray *) value {
    _responsibilities = value;
    [self valueChanged:_responsibilities forProperty:@"Responsibilities"];
}
       
/** Setter implementation for property schools
 *
 */
- (void) setSchools: (NSMutableArray *) value {
    _schools = value;
    [self valueChanged:_schools forProperty:@"Schools"];
}
       
/** Setter implementation for property skills
 *
 */
- (void) setSkills: (NSMutableArray *) value {
    _skills = value;
    [self valueChanged:_skills forProperty:@"Skills"];
}
       
/** Setter implementation for property tags
 *
 */
- (void) setTags: (NSMutableArray *) value {
    _tags = value;
    [self valueChanged:_tags forProperty:@"Tags"];
}
       
/** Setter implementation for property appRoleAssignments
 *
 */
- (void) setAppRoleAssignments: (NSMutableArray *) value {
    _appRoleAssignments = value;
    [self valueChanged:_appRoleAssignments forProperty:@"appRoleAssignments"];
}
       
/** Setter implementation for property oauth2PermissionGrants
 *
 */
- (void) setOauth2PermissionGrants: (NSMutableArray *) value {
    _oauth2PermissionGrants = value;
    [self valueChanged:_oauth2PermissionGrants forProperty:@"oauth2PermissionGrants"];
}
       
/** Setter implementation for property ownedDevices
 *
 */
- (void) setOwnedDevices: (NSMutableArray *) value {
    _ownedDevices = value;
    [self valueChanged:_ownedDevices forProperty:@"ownedDevices"];
}
       
/** Setter implementation for property registeredDevices
 *
 */
- (void) setRegisteredDevices: (NSMutableArray *) value {
    _registeredDevices = value;
    [self valueChanged:_registeredDevices forProperty:@"registeredDevices"];
}
       
/** Setter implementation for property manager
 *
 */
- (void) setManager: (MSGraphDirectoryObject *) value {
    _manager = value;
    [self valueChanged:_manager forProperty:@"manager"];
}
       
/** Setter implementation for property directReports
 *
 */
- (void) setDirectReports: (NSMutableArray *) value {
    _directReports = value;
    [self valueChanged:_directReports forProperty:@"directReports"];
}
       
/** Setter implementation for property memberOf
 *
 */
- (void) setMemberOf: (NSMutableArray *) value {
    _memberOf = value;
    [self valueChanged:_memberOf forProperty:@"memberOf"];
}
       
/** Setter implementation for property createdObjects
 *
 */
- (void) setCreatedObjects: (NSMutableArray *) value {
    _createdObjects = value;
    [self valueChanged:_createdObjects forProperty:@"createdObjects"];
}
       
/** Setter implementation for property ownedObjects
 *
 */
- (void) setOwnedObjects: (NSMutableArray *) value {
    _ownedObjects = value;
    [self valueChanged:_ownedObjects forProperty:@"ownedObjects"];
}
       
/** Setter implementation for property messages
 *
 */
- (void) setMessages: (NSMutableArray *) value {
    _messages = value;
    [self valueChanged:_messages forProperty:@"Messages"];
}
       
/** Setter implementation for property calendars
 *
 */
- (void) setCalendars: (NSMutableArray *) value {
    _calendars = value;
    [self valueChanged:_calendars forProperty:@"Calendars"];
}
       
/** Setter implementation for property calendar
 *
 */
- (void) setCalendar: (MSGraphCalendar *) value {
    _calendar = value;
    [self valueChanged:_calendar forProperty:@"Calendar"];
}
       
/** Setter implementation for property calendarGroups
 *
 */
- (void) setCalendarGroups: (NSMutableArray *) value {
    _calendarGroups = value;
    [self valueChanged:_calendarGroups forProperty:@"CalendarGroups"];
}
       
/** Setter implementation for property events
 *
 */
- (void) setEvents: (NSMutableArray *) value {
    _events = value;
    [self valueChanged:_events forProperty:@"Events"];
}
       
/** Setter implementation for property calendarView
 *
 */
- (void) setCalendarView: (NSMutableArray *) value {
    _calendarView = value;
    [self valueChanged:_calendarView forProperty:@"CalendarView"];
}
       
/** Setter implementation for property userPhoto
 *
 */
- (void) setUserPhoto: (MSGraphPhoto *) value {
    _userPhoto = value;
    [self valueChanged:_userPhoto forProperty:@"UserPhoto"];
}
       
/** Setter implementation for property userPhotos
 *
 */
- (void) setUserPhotos: (NSMutableArray *) value {
    _userPhotos = value;
    [self valueChanged:_userPhotos forProperty:@"UserPhotos"];
}
       
/** Setter implementation for property trendingAround
 *
 */
- (void) setTrendingAround: (NSMutableArray *) value {
    _trendingAround = value;
    [self valueChanged:_trendingAround forProperty:@"TrendingAround"];
}
       
/** Setter implementation for property workingWith
 *
 */
- (void) setWorkingWith: (NSMutableArray *) value {
    _workingWith = value;
    [self valueChanged:_workingWith forProperty:@"WorkingWith"];
}
       
/** Setter implementation for property joinedGroups
 *
 */
- (void) setJoinedGroups: (NSMutableArray *) value {
    _joinedGroups = value;
    [self valueChanged:_joinedGroups forProperty:@"JoinedGroups"];
}
       
/** Setter implementation for property drive
 *
 */
- (void) setDrive: (MSGraphDrive *) value {
    _drive = value;
    [self valueChanged:_drive forProperty:@"drive"];
}
       
/** Setter implementation for property files
 *
 */
- (void) setFiles: (NSMutableArray *) value {
    _files = value;
    [self valueChanged:_files forProperty:@"files"];
}
       

@end
