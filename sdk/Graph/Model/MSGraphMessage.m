/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphMessage
 *
 */
@implementation MSGraphMessage


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"ReceivedDateTime", @"receivedDateTime", @"SentDateTime", @"sentDateTime", @"HasAttachments", @"hasAttachments", @"Subject", @"subject", @"Body", @"body", @"BodyPreview", @"bodyPreview", @"Importance", @"importance", @"ParentFolderId", @"parentFolderId", @"Sender", @"sender", @"From", @"from", @"ToRecipients", @"toRecipients", @"CcRecipients", @"ccRecipients", @"BccRecipients", @"bccRecipients", @"ReplyTo", @"replyTo", @"ConversationId", @"conversationId", @"UniqueBody", @"uniqueBody", @"IsDeliveryReceiptRequested", @"isDeliveryReceiptRequested", @"IsReadReceiptRequested", @"isReadReceiptRequested", @"IsRead", @"isRead", @"IsDraft", @"isDraft", @"WebLink", @"webLink", @"InferenceClassification", @"inferenceClassification", @"Extensions", @"extensions", @"Attachments", @"attachments", @"CreatedDateTime", @"createdDateTime", @"LastModifiedDateTime", @"lastModifiedDateTime", @"ChangeKey", @"changeKey", @"Categories", @"categories", @"Id", @"_id", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.Message";
        
        
		_toRecipients = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_ccRecipients = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_bccRecipients = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_replyTo = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_extensions = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_attachments = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_receivedDateTime = [dic objectForKey: @"ReceivedDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"ReceivedDateTime"]] : _receivedDateTime;
		_sentDateTime = [dic objectForKey: @"SentDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"SentDateTime"]] : _sentDateTime;
		_hasAttachments = [dic objectForKey: @"HasAttachments"] != nil ? [[dic objectForKey: @"HasAttachments"] boolValue] : _hasAttachments;
		_subject = [dic objectForKey: @"Subject"] != nil ? [[dic objectForKey: @"Subject"] copy] : _subject;
		_body = [dic objectForKey: @"Body"] != nil ? [[MSGraphItemBody alloc] initWithDictionary: [dic objectForKey: @"Body"]] : _body;
		_bodyPreview = [dic objectForKey: @"BodyPreview"] != nil ? [[dic objectForKey: @"BodyPreview"] copy] : _bodyPreview;
		_importance = [dic objectForKey: @"Importance"] != nil ? [MSGraphImportanceSerializer fromString:[dic objectForKey: @"Importance"]] : _importance;
		_parentFolderId = [dic objectForKey: @"ParentFolderId"] != nil ? [[dic objectForKey: @"ParentFolderId"] copy] : _parentFolderId;
		_sender = [dic objectForKey: @"Sender"] != nil ? [[MSGraphRecipient alloc] initWithDictionary: [dic objectForKey: @"Sender"]] : _sender;
		_from = [dic objectForKey: @"From"] != nil ? [[MSGraphRecipient alloc] initWithDictionary: [dic objectForKey: @"From"]] : _from;

        if([dic objectForKey: @"ToRecipients"] != [NSNull null]){
            _toRecipients = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"ToRecipients"] count]];
            
            for (id object in [dic objectForKey: @"ToRecipients"]) {
                [_toRecipients addObject:[[MSGraphRecipient alloc] initWithDictionary: object]];
            }
        }
        

        if([dic objectForKey: @"CcRecipients"] != [NSNull null]){
            _ccRecipients = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"CcRecipients"] count]];
            
            for (id object in [dic objectForKey: @"CcRecipients"]) {
                [_ccRecipients addObject:[[MSGraphRecipient alloc] initWithDictionary: object]];
            }
        }
        

        if([dic objectForKey: @"BccRecipients"] != [NSNull null]){
            _bccRecipients = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"BccRecipients"] count]];
            
            for (id object in [dic objectForKey: @"BccRecipients"]) {
                [_bccRecipients addObject:[[MSGraphRecipient alloc] initWithDictionary: object]];
            }
        }
        

        if([dic objectForKey: @"ReplyTo"] != [NSNull null]){
            _replyTo = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"ReplyTo"] count]];
            
            for (id object in [dic objectForKey: @"ReplyTo"]) {
                [_replyTo addObject:[[MSGraphRecipient alloc] initWithDictionary: object]];
            }
        }
        
		_conversationId = [dic objectForKey: @"ConversationId"] != nil ? [[dic objectForKey: @"ConversationId"] copy] : _conversationId;
		_uniqueBody = [dic objectForKey: @"UniqueBody"] != nil ? [[MSGraphItemBody alloc] initWithDictionary: [dic objectForKey: @"UniqueBody"]] : _uniqueBody;
		_isDeliveryReceiptRequested = [dic objectForKey: @"IsDeliveryReceiptRequested"] != nil ? [[dic objectForKey: @"IsDeliveryReceiptRequested"] boolValue] : _isDeliveryReceiptRequested;
		_isReadReceiptRequested = [dic objectForKey: @"IsReadReceiptRequested"] != nil ? [[dic objectForKey: @"IsReadReceiptRequested"] boolValue] : _isReadReceiptRequested;
		_isRead = [dic objectForKey: @"IsRead"] != nil ? [[dic objectForKey: @"IsRead"] boolValue] : _isRead;
		_isDraft = [dic objectForKey: @"IsDraft"] != nil ? [[dic objectForKey: @"IsDraft"] boolValue] : _isDraft;
		_webLink = [dic objectForKey: @"WebLink"] != nil ? [[dic objectForKey: @"WebLink"] copy] : _webLink;
		_inferenceClassification = [dic objectForKey: @"InferenceClassification"] != nil ? [MSGraphInferenceClassificationTypeSerializer fromString:[dic objectForKey: @"InferenceClassification"]] : _inferenceClassification;

        if([dic objectForKey: @"Extensions"] != [NSNull null]){
            _extensions = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"Extensions"] count]];
            
            for (id object in [dic objectForKey: @"Extensions"]) {
                [_extensions addObject:[[MSGraphExtension alloc] initWithDictionary: object]];
            }
        }
        

        if([dic objectForKey: @"Attachments"] != [NSNull null]){
            _attachments = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"Attachments"] count]];
            
            for (id object in [dic objectForKey: @"Attachments"]) {
                [_attachments addObject:[[MSGraphAttachment alloc] initWithDictionary: object]];
            }
        }
        

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [MSOrcObjectizer stringFromDate:_receivedDateTime], @"ReceivedDateTime",
		 [MSOrcObjectizer stringFromDate:_sentDateTime], @"SentDateTime",
		 (_hasAttachments?@"true":@"false"), @"HasAttachments",
		 [_subject copy], @"Subject",
		 [_body toDictionary], @"Body",
		 [_bodyPreview copy], @"BodyPreview",
		 [MSGraphImportanceSerializer toString:_importance], @"Importance",
		 [_parentFolderId copy], @"ParentFolderId",
		 [_sender toDictionary], @"Sender",
		 [_from toDictionary], @"From",
		 [[NSMutableArray alloc] init], @"ToRecipients",
		 [[NSMutableArray alloc] init], @"CcRecipients",
		 [[NSMutableArray alloc] init], @"BccRecipients",
		 [[NSMutableArray alloc] init], @"ReplyTo",
		 [_conversationId copy], @"ConversationId",
		 [_uniqueBody toDictionary], @"UniqueBody",
		 (_isDeliveryReceiptRequested?@"true":@"false"), @"IsDeliveryReceiptRequested",
		 (_isReadReceiptRequested?@"true":@"false"), @"IsReadReceiptRequested",
		 (_isRead?@"true":@"false"), @"IsRead",
		 (_isDraft?@"true":@"false"), @"IsDraft",
		 [_webLink copy], @"WebLink",
		 [MSGraphInferenceClassificationTypeSerializer toString:_inferenceClassification], @"InferenceClassification",
		 [[NSMutableArray alloc] init], @"Extensions",
		 [[NSMutableArray alloc] init], @"Attachments",
            nil];
}


/** Setter implementation for property receivedDateTime
 *
 */
- (void) setReceivedDateTime: (NSDate *) value {
    _receivedDateTime = value;
    [self valueChangedFor:@"ReceivedDateTime"];
}
       
/** Setter implementation for property sentDateTime
 *
 */
- (void) setSentDateTime: (NSDate *) value {
    _sentDateTime = value;
    [self valueChangedFor:@"SentDateTime"];
}
       
/** Setter implementation for property hasAttachments
 *
 */
- (void) setHasAttachments: (bool) value {
    _hasAttachments = value;
    [self valueChangedFor:@"HasAttachments"];
}
       
/** Setter implementation for property subject
 *
 */
- (void) setSubject: (NSString *) value {
    _subject = value;
    [self valueChangedFor:@"Subject"];
}
       
/** Setter implementation for property body
 *
 */
- (void) setBody: (MSGraphItemBody *) value {
    _body = value;
    [self valueChangedFor:@"Body"];
}
       
/** Setter implementation for property bodyPreview
 *
 */
- (void) setBodyPreview: (NSString *) value {
    _bodyPreview = value;
    [self valueChangedFor:@"BodyPreview"];
}
       
/** Setter implementation for property importance
 *
 */
- (void) setImportance: (MSGraphImportance) value {
    _importance = value;
    [self valueChangedFor:@"Importance"];
}
       

- (void)setImportanceString:(NSString *)string {
        
    _importance = [MSGraphImportanceSerializer fromString:string];
    [self valueChangedFor:@"Importance"]; 
}

/** Setter implementation for property parentFolderId
 *
 */
- (void) setParentFolderId: (NSString *) value {
    _parentFolderId = value;
    [self valueChangedFor:@"ParentFolderId"];
}
       
/** Setter implementation for property sender
 *
 */
- (void) setSender: (MSGraphRecipient *) value {
    _sender = value;
    [self valueChangedFor:@"Sender"];
}
       
/** Setter implementation for property from
 *
 */
- (void) setFrom: (MSGraphRecipient *) value {
    _from = value;
    [self valueChangedFor:@"From"];
}
       
/** Setter implementation for property toRecipients
 *
 */
- (void) setToRecipients: (NSMutableArray *) value {
    _toRecipients = value;
    [self valueChangedFor:@"ToRecipients"];
}
       
/** Setter implementation for property ccRecipients
 *
 */
- (void) setCcRecipients: (NSMutableArray *) value {
    _ccRecipients = value;
    [self valueChangedFor:@"CcRecipients"];
}
       
/** Setter implementation for property bccRecipients
 *
 */
- (void) setBccRecipients: (NSMutableArray *) value {
    _bccRecipients = value;
    [self valueChangedFor:@"BccRecipients"];
}
       
/** Setter implementation for property replyTo
 *
 */
- (void) setReplyTo: (NSMutableArray *) value {
    _replyTo = value;
    [self valueChangedFor:@"ReplyTo"];
}
       
/** Setter implementation for property conversationId
 *
 */
- (void) setConversationId: (NSString *) value {
    _conversationId = value;
    [self valueChangedFor:@"ConversationId"];
}
       
/** Setter implementation for property uniqueBody
 *
 */
- (void) setUniqueBody: (MSGraphItemBody *) value {
    _uniqueBody = value;
    [self valueChangedFor:@"UniqueBody"];
}
       
/** Setter implementation for property isDeliveryReceiptRequested
 *
 */
- (void) setIsDeliveryReceiptRequested: (bool) value {
    _isDeliveryReceiptRequested = value;
    [self valueChangedFor:@"IsDeliveryReceiptRequested"];
}
       
/** Setter implementation for property isReadReceiptRequested
 *
 */
- (void) setIsReadReceiptRequested: (bool) value {
    _isReadReceiptRequested = value;
    [self valueChangedFor:@"IsReadReceiptRequested"];
}
       
/** Setter implementation for property isRead
 *
 */
- (void) setIsRead: (bool) value {
    _isRead = value;
    [self valueChangedFor:@"IsRead"];
}
       
/** Setter implementation for property isDraft
 *
 */
- (void) setIsDraft: (bool) value {
    _isDraft = value;
    [self valueChangedFor:@"IsDraft"];
}
       
/** Setter implementation for property webLink
 *
 */
- (void) setWebLink: (NSString *) value {
    _webLink = value;
    [self valueChangedFor:@"WebLink"];
}
       
/** Setter implementation for property inferenceClassification
 *
 */
- (void) setInferenceClassification: (MSGraphInferenceClassificationType) value {
    _inferenceClassification = value;
    [self valueChangedFor:@"InferenceClassification"];
}
       

- (void)setInferenceClassificationString:(NSString *)string {
        
    _inferenceClassification = [MSGraphInferenceClassificationTypeSerializer fromString:string];
    [self valueChangedFor:@"InferenceClassification"]; 
}

/** Setter implementation for property extensions
 *
 */
- (void) setExtensions: (NSMutableArray *) value {
    _extensions = value;
    [self valueChangedFor:@"Extensions"];
}
       
/** Setter implementation for property attachments
 *
 */
- (void) setAttachments: (NSMutableArray *) value {
    _attachments = value;
    [self valueChangedFor:@"Attachments"];
}
       

@end
