/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphServicePrincipal
 *
 */
@implementation MSGraphServicePrincipal


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"accountEnabled", @"accountEnabled", @"appDisplayName", @"appDisplayName", @"appId", @"appId", @"appOwnerTenantId", @"appOwnerTenantId", @"appRoleAssignmentRequired", @"appRoleAssignmentRequired", @"appRoles", @"appRoles", @"displayName", @"displayName", @"errorUrl", @"errorUrl", @"homepage", @"homepage", @"keyCredentials", @"keyCredentials", @"logoutUrl", @"logoutUrl", @"oauth2Permissions", @"oauth2Permissions", @"passwordCredentials", @"passwordCredentials", @"preferredTokenSigningKeyThumbprint", @"preferredTokenSigningKeyThumbprint", @"publisherName", @"publisherName", @"replyUrls", @"replyUrls", @"samlMetadataUrl", @"samlMetadataUrl", @"servicePrincipalNames", @"servicePrincipalNames", @"tags", @"tags", @"appRoleAssignedTo", @"appRoleAssignedTo", @"appRoleAssignments", @"appRoleAssignments", @"oauth2PermissionGrants", @"oauth2PermissionGrants", @"memberOf", @"memberOf", @"createdOnBehalfOf", @"createdOnBehalfOf", @"createdObjects", @"createdObjects", @"owners", @"owners", @"ownedObjects", @"ownedObjects", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.ServicePrincipal";
        
        
		_appRoles = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_keyCredentials = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_oauth2Permissions = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_passwordCredentials = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_replyUrls = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_servicePrincipalNames = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_tags = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_appRoleAssignments = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_oauth2PermissionGrants = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_memberOf = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_createdObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_owners = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_ownedObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property accountEnabled
 *
 */
- (void) setAccountEnabled: (bool) value {
    _accountEnabled = value;
    [self valueChangedForBool:_accountEnabled forProperty:@"accountEnabled"];
}
       
/** Setter implementation for property appDisplayName
 *
 */
- (void) setAppDisplayName: (NSString *) value {
    _appDisplayName = value;
    [self valueChanged:_appDisplayName forProperty:@"appDisplayName"];
}
       
/** Setter implementation for property appId
 *
 */
- (void) setAppId: (NSString *) value {
    _appId = value;
    [self valueChanged:_appId forProperty:@"appId"];
}
       
/** Setter implementation for property appOwnerTenantId
 *
 */
- (void) setAppOwnerTenantId: (NSString *) value {
    _appOwnerTenantId = value;
    [self valueChanged:_appOwnerTenantId forProperty:@"appOwnerTenantId"];
}
       
/** Setter implementation for property appRoleAssignmentRequired
 *
 */
- (void) setAppRoleAssignmentRequired: (bool) value {
    _appRoleAssignmentRequired = value;
    [self valueChangedForBool:_appRoleAssignmentRequired forProperty:@"appRoleAssignmentRequired"];
}
       
/** Setter implementation for property appRoles
 *
 */
- (void) setAppRoles: (NSMutableArray *) value {
    _appRoles = value;
    [self valueChanged:_appRoles forProperty:@"appRoles"];
}
       
/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChanged:_displayName forProperty:@"displayName"];
}
       
/** Setter implementation for property errorUrl
 *
 */
- (void) setErrorUrl: (NSString *) value {
    _errorUrl = value;
    [self valueChanged:_errorUrl forProperty:@"errorUrl"];
}
       
/** Setter implementation for property homepage
 *
 */
- (void) setHomepage: (NSString *) value {
    _homepage = value;
    [self valueChanged:_homepage forProperty:@"homepage"];
}
       
/** Setter implementation for property keyCredentials
 *
 */
- (void) setKeyCredentials: (NSMutableArray *) value {
    _keyCredentials = value;
    [self valueChanged:_keyCredentials forProperty:@"keyCredentials"];
}
       
/** Setter implementation for property logoutUrl
 *
 */
- (void) setLogoutUrl: (NSString *) value {
    _logoutUrl = value;
    [self valueChanged:_logoutUrl forProperty:@"logoutUrl"];
}
       
/** Setter implementation for property oauth2Permissions
 *
 */
- (void) setOauth2Permissions: (NSMutableArray *) value {
    _oauth2Permissions = value;
    [self valueChanged:_oauth2Permissions forProperty:@"oauth2Permissions"];
}
       
/** Setter implementation for property passwordCredentials
 *
 */
- (void) setPasswordCredentials: (NSMutableArray *) value {
    _passwordCredentials = value;
    [self valueChanged:_passwordCredentials forProperty:@"passwordCredentials"];
}
       
/** Setter implementation for property preferredTokenSigningKeyThumbprint
 *
 */
- (void) setPreferredTokenSigningKeyThumbprint: (NSString *) value {
    _preferredTokenSigningKeyThumbprint = value;
    [self valueChanged:_preferredTokenSigningKeyThumbprint forProperty:@"preferredTokenSigningKeyThumbprint"];
}
       
/** Setter implementation for property publisherName
 *
 */
- (void) setPublisherName: (NSString *) value {
    _publisherName = value;
    [self valueChanged:_publisherName forProperty:@"publisherName"];
}
       
/** Setter implementation for property replyUrls
 *
 */
- (void) setReplyUrls: (NSMutableArray *) value {
    _replyUrls = value;
    [self valueChanged:_replyUrls forProperty:@"replyUrls"];
}
       
/** Setter implementation for property samlMetadataUrl
 *
 */
- (void) setSamlMetadataUrl: (NSString *) value {
    _samlMetadataUrl = value;
    [self valueChanged:_samlMetadataUrl forProperty:@"samlMetadataUrl"];
}
       
/** Setter implementation for property servicePrincipalNames
 *
 */
- (void) setServicePrincipalNames: (NSMutableArray *) value {
    _servicePrincipalNames = value;
    [self valueChanged:_servicePrincipalNames forProperty:@"servicePrincipalNames"];
}
       
/** Setter implementation for property tags
 *
 */
- (void) setTags: (NSMutableArray *) value {
    _tags = value;
    [self valueChanged:_tags forProperty:@"tags"];
}
       
/** Setter implementation for property appRoleAssignedTo
 *
 */
- (void) setAppRoleAssignedTo: (MSGraphAppRoleAssignment *) value {
    _appRoleAssignedTo = value;
    [self valueChanged:_appRoleAssignedTo forProperty:@"appRoleAssignedTo"];
}
       
/** Setter implementation for property appRoleAssignments
 *
 */
- (void) setAppRoleAssignments: (NSMutableArray *) value {
    _appRoleAssignments = value;
    [self valueChanged:_appRoleAssignments forProperty:@"appRoleAssignments"];
}
       
/** Setter implementation for property oauth2PermissionGrants
 *
 */
- (void) setOauth2PermissionGrants: (NSMutableArray *) value {
    _oauth2PermissionGrants = value;
    [self valueChanged:_oauth2PermissionGrants forProperty:@"oauth2PermissionGrants"];
}
       
/** Setter implementation for property memberOf
 *
 */
- (void) setMemberOf: (NSMutableArray *) value {
    _memberOf = value;
    [self valueChanged:_memberOf forProperty:@"memberOf"];
}
       
/** Setter implementation for property createdOnBehalfOf
 *
 */
- (void) setCreatedOnBehalfOf: (MSGraphDirectoryObject *) value {
    _createdOnBehalfOf = value;
    [self valueChanged:_createdOnBehalfOf forProperty:@"createdOnBehalfOf"];
}
       
/** Setter implementation for property createdObjects
 *
 */
- (void) setCreatedObjects: (NSMutableArray *) value {
    _createdObjects = value;
    [self valueChanged:_createdObjects forProperty:@"createdObjects"];
}
       
/** Setter implementation for property owners
 *
 */
- (void) setOwners: (NSMutableArray *) value {
    _owners = value;
    [self valueChanged:_owners forProperty:@"owners"];
}
       
/** Setter implementation for property ownedObjects
 *
 */
- (void) setOwnedObjects: (NSMutableArray *) value {
    _ownedObjects = value;
    [self valueChanged:_ownedObjects forProperty:@"ownedObjects"];
}
       

@end
