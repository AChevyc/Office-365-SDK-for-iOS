/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphPermission
 *
 */
@implementation MSGraphPermission


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"grantedTo", @"grantedTo", @"id", @"_id", @"invitation", @"invitation", @"inheritedFrom", @"inheritedFrom", @"link", @"link", @"roles", @"roles", @"shareId", @"shareId", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.permission";
        
        
		_roles = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_grantedTo = [dic objectForKey: @"grantedTo"] != nil ? [[MSGraphIdentitySet alloc] initWithDictionary: [dic objectForKey: @"grantedTo"]] : _grantedTo;
		__id = [dic objectForKey: @"id"] != nil ? [[dic objectForKey: @"id"] copy] : __id;
		_invitation = [dic objectForKey: @"invitation"] != nil ? [[MSGraphSharingInvitation alloc] initWithDictionary: [dic objectForKey: @"invitation"]] : _invitation;
		_inheritedFrom = [dic objectForKey: @"inheritedFrom"] != nil ? [[MSGraphItemReference alloc] initWithDictionary: [dic objectForKey: @"inheritedFrom"]] : _inheritedFrom;
		_link = [dic objectForKey: @"link"] != nil ? [[MSGraphSharingLink alloc] initWithDictionary: [dic objectForKey: @"link"]] : _link;

        if([dic objectForKey: @"roles"] != [NSNull null]){
            _roles = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"roles"] count]];
            
            for (id object in [dic objectForKey: @"roles"]) {
                [_roles addObject:[object copy]];
            }
        }
        
		_shareId = [dic objectForKey: @"shareId"] != nil ? [[dic objectForKey: @"shareId"] copy] : _shareId;

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [_grantedTo toDictionary], @"grantedTo",
		 [__id copy], @"id",
		 [_invitation toDictionary], @"invitation",
		 [_inheritedFrom toDictionary], @"inheritedFrom",
		 [_link toDictionary], @"link",
		 [[NSMutableArray alloc] init], @"roles",
		 [_shareId copy], @"shareId",
            nil];
}


/** Setter implementation for property grantedTo
 *
 */
- (void) setGrantedTo: (MSGraphIdentitySet *) value {
    _grantedTo = value;
    [self valueChangedFor:@"grantedTo"];
}
       
/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChangedFor:@"id"];
}
       
/** Setter implementation for property invitation
 *
 */
- (void) setInvitation: (MSGraphSharingInvitation *) value {
    _invitation = value;
    [self valueChangedFor:@"invitation"];
}
       
/** Setter implementation for property inheritedFrom
 *
 */
- (void) setInheritedFrom: (MSGraphItemReference *) value {
    _inheritedFrom = value;
    [self valueChangedFor:@"inheritedFrom"];
}
       
/** Setter implementation for property link
 *
 */
- (void) setLink: (MSGraphSharingLink *) value {
    _link = value;
    [self valueChangedFor:@"link"];
}
       
/** Setter implementation for property roles
 *
 */
- (void) setRoles: (NSMutableArray *) value {
    _roles = value;
    [self valueChangedFor:@"roles"];
}
       
/** Setter implementation for property shareId
 *
 */
- (void) setShareId: (NSString *) value {
    _shareId = value;
    [self valueChangedFor:@"shareId"];
}
       

@end
