/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphDirectoryRole
 *
 */
@implementation MSGraphDirectoryRole


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"description", @"_description", @"displayName", @"displayName", @"isSystem", @"isSystem", @"roleDisabled", @"roleDisabled", @"roleTemplateId", @"roleTemplateId", @"members", @"members", @"memberOf", @"memberOf", @"owners", @"owners", @"ownedObjects", @"ownedObjects", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.DirectoryRole";
        
        
		_members = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_memberOf = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_owners = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_ownedObjects = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property _description
 *
 */
- (void) setDescription: (NSString *) value {
    __description = value;
    [self valueChanged:__description forProperty:@"description"];
}
       
/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChanged:_displayName forProperty:@"displayName"];
}
       
/** Setter implementation for property isSystem
 *
 */
- (void) setIsSystem: (bool) value {
    _isSystem = value;
    [self valueChangedForBool:_isSystem forProperty:@"isSystem"];
}
       
/** Setter implementation for property roleDisabled
 *
 */
- (void) setRoleDisabled: (bool) value {
    _roleDisabled = value;
    [self valueChangedForBool:_roleDisabled forProperty:@"roleDisabled"];
}
       
/** Setter implementation for property roleTemplateId
 *
 */
- (void) setRoleTemplateId: (NSString *) value {
    _roleTemplateId = value;
    [self valueChanged:_roleTemplateId forProperty:@"roleTemplateId"];
}
       
/** Setter implementation for property members
 *
 */
- (void) setMembers: (NSMutableArray *) value {
    _members = value;
    [self valueChanged:_members forProperty:@"members"];
}
       
/** Setter implementation for property memberOf
 *
 */
- (void) setMemberOf: (NSMutableArray *) value {
    _memberOf = value;
    [self valueChanged:_memberOf forProperty:@"memberOf"];
}
       
/** Setter implementation for property owners
 *
 */
- (void) setOwners: (NSMutableArray *) value {
    _owners = value;
    [self valueChanged:_owners forProperty:@"owners"];
}
       
/** Setter implementation for property ownedObjects
 *
 */
- (void) setOwnedObjects: (NSMutableArray *) value {
    _ownedObjects = value;
    [self valueChanged:_ownedObjects forProperty:@"ownedObjects"];
}
       

@end
