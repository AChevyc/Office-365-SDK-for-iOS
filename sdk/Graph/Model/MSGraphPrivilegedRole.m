/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphPrivilegedRole
 *
 */
@implementation MSGraphPrivilegedRole


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"Id", @"_id", @"Name", @"name", @"Summary", @"summary", @"Settings", @"settings", @"Assignments", @"assignments", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.PrivilegedRole";
        
        
		_assignments = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		__id = [dic objectForKey: @"Id"] != nil ? [[dic objectForKey: @"Id"] copy] : __id;
		_name = [dic objectForKey: @"Name"] != nil ? [[dic objectForKey: @"Name"] copy] : _name;
		_summary = [dic objectForKey: @"Summary"] != nil ? [[MSGraphPrivilegedRoleSummary alloc] initWithDictionary: [dic objectForKey: @"Summary"]] : _summary;
		_settings = [dic objectForKey: @"Settings"] != nil ? [[MSGraphPrivilegedRoleSettings alloc] initWithDictionary: [dic objectForKey: @"Settings"]] : _settings;

        if([dic objectForKey: @"Assignments"] != [NSNull null]){
            _assignments = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"Assignments"] count]];
            
            for (id object in [dic objectForKey: @"Assignments"]) {
                [_assignments addObject:[[MSGraphPrivilegedRoleAssignment alloc] initWithDictionary: object]];
            }
        }
        

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self._id copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"Id"];}
	{id curVal = [self.name copy]; if (curVal!=nil) [dic setValue: curVal forKey: @"Name"];}
	{id curVal = [self.summary toDictionary]; if (curVal!=nil) [dic setValue: curVal forKey: @"Summary"];}
	{id curVal = [self.settings toDictionary]; if (curVal!=nil) [dic setValue: curVal forKey: @"Settings"];}
	{id curVal = nil/*MUST SERIALIZE COLLECTION!*/; if (curVal!=nil) [dic setValue: curVal forKey: @"Assignments"];}
    [dic setValue: @"#Microsoft.Graph.PrivilegedRole" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self._id;
    if([self.updatedValues containsObject:@"Id"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"Id"];
    }
    }
	{id curVal = self.name;
    if([self.updatedValues containsObject:@"Name"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"Name"];
    }
    }
	{id curVal = self.summary;
    if([self.updatedValues containsObject:@"Summary"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"Summary"];
    }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"Summary"];
            }
        
            }}
	{id curVal = self.settings;
    if([self.updatedValues containsObject:@"Settings"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"Settings"];
    }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"Settings"];
            }
        
            }}
	{id curVal = self.assignments;
    if([self.updatedValues containsObject:@"Assignments"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"Assignments"];
    }
        else
    {
                
        //Check collection change:
        
            }}
    return dic;
}


/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChangedFor:@"Id"];
}
       
/** Setter implementation for property name
 *
 */
- (void) setName: (NSString *) value {
    _name = value;
    [self valueChangedFor:@"Name"];
}
       
/** Setter implementation for property summary
 *
 */
- (void) setSummary: (MSGraphPrivilegedRoleSummary *) value {
    _summary = value;
    [self valueChangedFor:@"Summary"];
}
       
/** Setter implementation for property settings
 *
 */
- (void) setSettings: (MSGraphPrivilegedRoleSettings *) value {
    _settings = value;
    [self valueChangedFor:@"Settings"];
}
       
/** Setter implementation for property assignments
 *
 */
- (void) setAssignments: (NSMutableArray *) value {
    _assignments = value;
    [self valueChangedFor:@"Assignments"];
}
       

@end
