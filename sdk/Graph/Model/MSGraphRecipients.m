/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphRecipients
 *
 */
@implementation MSGraphRecipients


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"email", @"email", @"alias", @"alias", @"objectId", @"objectId", @"permissionIdentityType", @"permissionIdentityType", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.recipients";

    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_email = [dic objectForKey: @"email"] != nil ? [[dic objectForKey: @"email"] copy] : _email;
		_alias = [dic objectForKey: @"alias"] != nil ? [[dic objectForKey: @"alias"] copy] : _alias;
		_objectId = [dic objectForKey: @"objectId"] != nil ? [[dic objectForKey: @"objectId"] copy] : _objectId;
		_permissionIdentityType = [dic objectForKey: @"permissionIdentityType"] != nil ? [[dic objectForKey: @"permissionIdentityType"] copy] : _permissionIdentityType;

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.email copy];if (curVal!=nil) [dic setValue: curVal forKey: @"email"];}
	{id curVal = [self.alias copy];if (curVal!=nil) [dic setValue: curVal forKey: @"alias"];}
	{id curVal = [self.objectId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"objectId"];}
	{id curVal = [self.permissionIdentityType copy];if (curVal!=nil) [dic setValue: curVal forKey: @"permissionIdentityType"];}
    [dic setValue: @"#microsoft.graph.recipients" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.email;
    if([self.updatedValues containsObject:@"email"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"email"];
            }
    }
	{id curVal = self.alias;
    if([self.updatedValues containsObject:@"alias"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"alias"];
            }
    }
	{id curVal = self.objectId;
    if([self.updatedValues containsObject:@"objectId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"objectId"];
            }
    }
	{id curVal = self.permissionIdentityType;
    if([self.updatedValues containsObject:@"permissionIdentityType"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"permissionIdentityType"];
            }
    }
    return dic;
}


/** Setter implementation for property email
 *
 */
- (void) setEmail: (NSString *) value {
    _email = value;
    [self valueChangedFor:@"email"];
}
       
/** Setter implementation for property alias
 *
 */
- (void) setAlias: (NSString *) value {
    _alias = value;
    [self valueChangedFor:@"alias"];
}
       
/** Setter implementation for property objectId
 *
 */
- (void) setObjectId: (NSString *) value {
    _objectId = value;
    [self valueChangedFor:@"objectId"];
}
       
/** Setter implementation for property permissionIdentityType
 *
 */
- (void) setPermissionIdentityType: (NSString *) value {
    _permissionIdentityType = value;
    [self valueChangedFor:@"permissionIdentityType"];
}
       

@end
