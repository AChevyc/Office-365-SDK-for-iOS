/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphPrivilegedOperationEvent
 *
 */
@implementation MSGraphPrivilegedOperationEvent


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
        if(_$$$_$$$propertiesNamesMappings==nil) {
    
        _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"Id", @"_id", @"UserId", @"userId", @"UserName", @"userName", @"UserMail", @"userMail", @"RoleId", @"roleId", @"RoleName", @"roleName", @"ExpirationTime", @"expirationTime", @"CreationTime", @"creationTime", @"RequestorId", @"requestorId", @"RequestorName", @"requestorName", @"TenantId", @"tenantId", @"RequestType", @"requestType", @"AdditionalInformation", @"additionalInformation", nil];
        
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.PrivilegedOperationEvent";
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
        if(dic!=nil) {
		__id = (![dic objectForKey: @"Id"] || [ [dic objectForKey: @"Id"] isKindOfClass:[NSNull class]] )?__id:[[dic objectForKey: @"Id"] copy];
		_userId = (![dic objectForKey: @"UserId"] || [ [dic objectForKey: @"UserId"] isKindOfClass:[NSNull class]] )?_userId:[[dic objectForKey: @"UserId"] copy];
		_userName = (![dic objectForKey: @"UserName"] || [ [dic objectForKey: @"UserName"] isKindOfClass:[NSNull class]] )?_userName:[[dic objectForKey: @"UserName"] copy];
		_userMail = (![dic objectForKey: @"UserMail"] || [ [dic objectForKey: @"UserMail"] isKindOfClass:[NSNull class]] )?_userMail:[[dic objectForKey: @"UserMail"] copy];
		_roleId = (![dic objectForKey: @"RoleId"] || [ [dic objectForKey: @"RoleId"] isKindOfClass:[NSNull class]] )?_roleId:[[dic objectForKey: @"RoleId"] copy];
		_roleName = (![dic objectForKey: @"RoleName"] || [ [dic objectForKey: @"RoleName"] isKindOfClass:[NSNull class]] )?_roleName:[[dic objectForKey: @"RoleName"] copy];
		_expirationTime = (![dic objectForKey: @"ExpirationTime"] || [ [dic objectForKey: @"ExpirationTime"] isKindOfClass:[NSNull class]] )?_expirationTime:[MSOrcObjectizer dateFromString:[dic objectForKey: @"ExpirationTime"]];
		_creationTime = (![dic objectForKey: @"CreationTime"] || [ [dic objectForKey: @"CreationTime"] isKindOfClass:[NSNull class]] )?_creationTime:[MSOrcObjectizer dateFromString:[dic objectForKey: @"CreationTime"]];
		_requestorId = (![dic objectForKey: @"RequestorId"] || [ [dic objectForKey: @"RequestorId"] isKindOfClass:[NSNull class]] )?_requestorId:[[dic objectForKey: @"RequestorId"] copy];
		_requestorName = (![dic objectForKey: @"RequestorName"] || [ [dic objectForKey: @"RequestorName"] isKindOfClass:[NSNull class]] )?_requestorName:[[dic objectForKey: @"RequestorName"] copy];
		_tenantId = (![dic objectForKey: @"TenantId"] || [ [dic objectForKey: @"TenantId"] isKindOfClass:[NSNull class]] )?_tenantId:[[dic objectForKey: @"TenantId"] copy];
		_requestType = (![dic objectForKey: @"RequestType"] || [ [dic objectForKey: @"RequestType"] isKindOfClass:[NSNull class]] )?_requestType:[[dic objectForKey: @"RequestType"] copy];
		_additionalInformation = (![dic objectForKey: @"AdditionalInformation"] || [ [dic objectForKey: @"AdditionalInformation"] isKindOfClass:[NSNull class]] )?_additionalInformation:[[dic objectForKey: @"AdditionalInformation"] copy];
    }
    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self._id copy];if (curVal!=nil) [dic setValue: curVal forKey: @"Id"];}
	{id curVal = [self.userId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"UserId"];}
	{id curVal = [self.userName copy];if (curVal!=nil) [dic setValue: curVal forKey: @"UserName"];}
	{id curVal = [self.userMail copy];if (curVal!=nil) [dic setValue: curVal forKey: @"UserMail"];}
	{id curVal = [self.roleId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"RoleId"];}
	{id curVal = [self.roleName copy];if (curVal!=nil) [dic setValue: curVal forKey: @"RoleName"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.expirationTime];if (curVal!=nil) [dic setValue: curVal forKey: @"ExpirationTime"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.creationTime];if (curVal!=nil) [dic setValue: curVal forKey: @"CreationTime"];}
	{id curVal = [self.requestorId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"RequestorId"];}
	{id curVal = [self.requestorName copy];if (curVal!=nil) [dic setValue: curVal forKey: @"RequestorName"];}
	{id curVal = [self.tenantId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"TenantId"];}
	{id curVal = [self.requestType copy];if (curVal!=nil) [dic setValue: curVal forKey: @"RequestType"];}
	{id curVal = [self.additionalInformation copy];if (curVal!=nil) [dic setValue: curVal forKey: @"AdditionalInformation"];}
    [dic setValue: @"#microsoft.graph.PrivilegedOperationEvent" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self._id;
    if([self.updatedValues containsObject:@"Id"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"Id"];
            }
    }
	{id curVal = self.userId;
    if([self.updatedValues containsObject:@"UserId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"UserId"];
            }
    }
	{id curVal = self.userName;
    if([self.updatedValues containsObject:@"UserName"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"UserName"];
            }
    }
	{id curVal = self.userMail;
    if([self.updatedValues containsObject:@"UserMail"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"UserMail"];
            }
    }
	{id curVal = self.roleId;
    if([self.updatedValues containsObject:@"RoleId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"RoleId"];
            }
    }
	{id curVal = self.roleName;
    if([self.updatedValues containsObject:@"RoleName"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"RoleName"];
            }
    }
	{id curVal = self.expirationTime;
    if([self.updatedValues containsObject:@"ExpirationTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"ExpirationTime"];
            }
    }
	{id curVal = self.creationTime;
    if([self.updatedValues containsObject:@"CreationTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"CreationTime"];
            }
    }
	{id curVal = self.requestorId;
    if([self.updatedValues containsObject:@"RequestorId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"RequestorId"];
            }
    }
	{id curVal = self.requestorName;
    if([self.updatedValues containsObject:@"RequestorName"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"RequestorName"];
            }
    }
	{id curVal = self.tenantId;
    if([self.updatedValues containsObject:@"TenantId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"TenantId"];
            }
    }
	{id curVal = self.requestType;
    if([self.updatedValues containsObject:@"RequestType"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"RequestType"];
            }
    }
	{id curVal = self.additionalInformation;
    if([self.updatedValues containsObject:@"AdditionalInformation"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"AdditionalInformation"];
            }
    }
    return dic;
}


/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChangedFor:@"Id"];
}
       
/** Setter implementation for property userId
 *
 */
- (void) setUserId: (NSString *) value {
    _userId = value;
    [self valueChangedFor:@"UserId"];
}
       
/** Setter implementation for property userName
 *
 */
- (void) setUserName: (NSString *) value {
    _userName = value;
    [self valueChangedFor:@"UserName"];
}
       
/** Setter implementation for property userMail
 *
 */
- (void) setUserMail: (NSString *) value {
    _userMail = value;
    [self valueChangedFor:@"UserMail"];
}
       
/** Setter implementation for property roleId
 *
 */
- (void) setRoleId: (NSString *) value {
    _roleId = value;
    [self valueChangedFor:@"RoleId"];
}
       
/** Setter implementation for property roleName
 *
 */
- (void) setRoleName: (NSString *) value {
    _roleName = value;
    [self valueChangedFor:@"RoleName"];
}
       
/** Setter implementation for property expirationTime
 *
 */
- (void) setExpirationTime: (NSDate *) value {
    _expirationTime = value;
    [self valueChangedFor:@"ExpirationTime"];
}
       
/** Setter implementation for property creationTime
 *
 */
- (void) setCreationTime: (NSDate *) value {
    _creationTime = value;
    [self valueChangedFor:@"CreationTime"];
}
       
/** Setter implementation for property requestorId
 *
 */
- (void) setRequestorId: (NSString *) value {
    _requestorId = value;
    [self valueChangedFor:@"RequestorId"];
}
       
/** Setter implementation for property requestorName
 *
 */
- (void) setRequestorName: (NSString *) value {
    _requestorName = value;
    [self valueChangedFor:@"RequestorName"];
}
       
/** Setter implementation for property tenantId
 *
 */
- (void) setTenantId: (NSString *) value {
    _tenantId = value;
    [self valueChangedFor:@"TenantId"];
}
       
/** Setter implementation for property requestType
 *
 */
- (void) setRequestType: (NSString *) value {
    _requestType = value;
    [self valueChangedFor:@"RequestType"];
}
       
/** Setter implementation for property additionalInformation
 *
 */
- (void) setAdditionalInformation: (NSString *) value {
    _additionalInformation = value;
    [self valueChangedFor:@"AdditionalInformation"];
}
       

@end
