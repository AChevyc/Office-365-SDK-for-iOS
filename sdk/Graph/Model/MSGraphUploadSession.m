/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphUploadSession
 *
 */
@implementation MSGraphUploadSession


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"uploadUrl", @"uploadUrl", @"expirationDateTime", @"expirationDateTime", @"nextExpectedRanges", @"nextExpectedRanges", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.uploadSession";

        
		_nextExpectedRanges = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_uploadUrl = [dic objectForKey: @"uploadUrl"] != nil ? [[dic objectForKey: @"uploadUrl"] copy] : _uploadUrl;
		_expirationDateTime = [dic objectForKey: @"expirationDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"expirationDateTime"]] : _expirationDateTime;

        if([dic objectForKey: @"nextExpectedRanges"] != [NSNull null]){
            _nextExpectedRanges = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"nextExpectedRanges"] count]];
            
            for (id object in [dic objectForKey: @"nextExpectedRanges"]) {
                [_nextExpectedRanges addObject:[object copy]];
            }
        }
        

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [_uploadUrl copy], @"uploadUrl",
		 [MSOrcObjectizer stringFromDate:_expirationDateTime], @"expirationDateTime",
		 [[NSMutableArray alloc] init], @"nextExpectedRanges",
            nil];
}


/** Setter implementation for property uploadUrl
 *
 */
- (void) setUploadUrl: (NSString *) value {
    _uploadUrl = value;
    [self valueChangedFor:@"uploadUrl"];
}
       
/** Setter implementation for property expirationDateTime
 *
 */
- (void) setExpirationDateTime: (NSDate *) value {
    _expirationDateTime = value;
    [self valueChangedFor:@"expirationDateTime"];
}
       
/** Setter implementation for property nextExpectedRanges
 *
 */
- (void) setNextExpectedRanges: (NSMutableArray *) value {
    _nextExpectedRanges = value;
    [self valueChangedFor:@"nextExpectedRanges"];
}
       

@end
