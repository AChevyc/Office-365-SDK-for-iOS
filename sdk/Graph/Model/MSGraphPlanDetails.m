/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphPlanDetails
 *
 */
@implementation MSGraphPlanDetails


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"sharedWith", @"sharedWith", @"category0Description", @"category0Description", @"category1Description", @"category1Description", @"category2Description", @"category2Description", @"category3Description", @"category3Description", @"category4Description", @"category4Description", @"category5Description", @"category5Description", @"id", @"_id", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.planDetails";
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_sharedWith = [dic objectForKey: @"sharedWith"] != nil ? [[MSGraphUserIdCollection alloc] initWithDictionary: [dic objectForKey: @"sharedWith"]] : _sharedWith;
		_category0Description = [dic objectForKey: @"category0Description"] != nil ? [[dic objectForKey: @"category0Description"] copy] : _category0Description;
		_category1Description = [dic objectForKey: @"category1Description"] != nil ? [[dic objectForKey: @"category1Description"] copy] : _category1Description;
		_category2Description = [dic objectForKey: @"category2Description"] != nil ? [[dic objectForKey: @"category2Description"] copy] : _category2Description;
		_category3Description = [dic objectForKey: @"category3Description"] != nil ? [[dic objectForKey: @"category3Description"] copy] : _category3Description;
		_category4Description = [dic objectForKey: @"category4Description"] != nil ? [[dic objectForKey: @"category4Description"] copy] : _category4Description;
		_category5Description = [dic objectForKey: @"category5Description"] != nil ? [[dic objectForKey: @"category5Description"] copy] : _category5Description;
		__id = [dic objectForKey: @"id"] != nil ? [[dic objectForKey: @"id"] copy] : __id;

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.sharedWith toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"sharedWith"];}
	{id curVal = [self.category0Description copy];if (curVal!=nil) [dic setValue: curVal forKey: @"category0Description"];}
	{id curVal = [self.category1Description copy];if (curVal!=nil) [dic setValue: curVal forKey: @"category1Description"];}
	{id curVal = [self.category2Description copy];if (curVal!=nil) [dic setValue: curVal forKey: @"category2Description"];}
	{id curVal = [self.category3Description copy];if (curVal!=nil) [dic setValue: curVal forKey: @"category3Description"];}
	{id curVal = [self.category4Description copy];if (curVal!=nil) [dic setValue: curVal forKey: @"category4Description"];}
	{id curVal = [self.category5Description copy];if (curVal!=nil) [dic setValue: curVal forKey: @"category5Description"];}
	{id curVal = [self._id copy];if (curVal!=nil) [dic setValue: curVal forKey: @"id"];}
    [dic setValue: @"#microsoft.graph.planDetails" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.sharedWith;
    if([self.updatedValues containsObject:@"sharedWith"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"sharedWith"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"sharedWith"];
            }
        
            }}
	{id curVal = self.category0Description;
    if([self.updatedValues containsObject:@"category0Description"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"category0Description"];
            }
    }
	{id curVal = self.category1Description;
    if([self.updatedValues containsObject:@"category1Description"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"category1Description"];
            }
    }
	{id curVal = self.category2Description;
    if([self.updatedValues containsObject:@"category2Description"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"category2Description"];
            }
    }
	{id curVal = self.category3Description;
    if([self.updatedValues containsObject:@"category3Description"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"category3Description"];
            }
    }
	{id curVal = self.category4Description;
    if([self.updatedValues containsObject:@"category4Description"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"category4Description"];
            }
    }
	{id curVal = self.category5Description;
    if([self.updatedValues containsObject:@"category5Description"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"category5Description"];
            }
    }
	{id curVal = self._id;
    if([self.updatedValues containsObject:@"id"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"id"];
            }
    }
    return dic;
}


/** Setter implementation for property sharedWith
 *
 */
- (void) setSharedWith: (MSGraphUserIdCollection *) value {
    _sharedWith = value;
    [self valueChangedFor:@"sharedWith"];
}
       
/** Setter implementation for property category0Description
 *
 */
- (void) setCategory0Description: (NSString *) value {
    _category0Description = value;
    [self valueChangedFor:@"category0Description"];
}
       
/** Setter implementation for property category1Description
 *
 */
- (void) setCategory1Description: (NSString *) value {
    _category1Description = value;
    [self valueChangedFor:@"category1Description"];
}
       
/** Setter implementation for property category2Description
 *
 */
- (void) setCategory2Description: (NSString *) value {
    _category2Description = value;
    [self valueChangedFor:@"category2Description"];
}
       
/** Setter implementation for property category3Description
 *
 */
- (void) setCategory3Description: (NSString *) value {
    _category3Description = value;
    [self valueChangedFor:@"category3Description"];
}
       
/** Setter implementation for property category4Description
 *
 */
- (void) setCategory4Description: (NSString *) value {
    _category4Description = value;
    [self valueChangedFor:@"category4Description"];
}
       
/** Setter implementation for property category5Description
 *
 */
- (void) setCategory5Description: (NSString *) value {
    _category5Description = value;
    [self valueChangedFor:@"category5Description"];
}
       
/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChangedFor:@"id"];
}
       

@end
