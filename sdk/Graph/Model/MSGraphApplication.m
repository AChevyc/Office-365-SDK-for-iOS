/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphApplication
 *
 */
@implementation MSGraphApplication


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"appId", @"appId", @"appRoles", @"appRoles", @"availableToOtherTenants", @"availableToOtherTenants", @"displayName", @"displayName", @"errorUrl", @"errorUrl", @"groupMembershipClaims", @"groupMembershipClaims", @"homepage", @"homepage", @"identifierUris", @"identifierUris", @"keyCredentials", @"keyCredentials", @"knownClientApplications", @"knownClientApplications", @"mainLogo", @"mainLogo", @"logoutUrl", @"logoutUrl", @"oauth2AllowImplicitFlow", @"oauth2AllowImplicitFlow", @"oauth2AllowUrlPathMatching", @"oauth2AllowUrlPathMatching", @"oauth2Permissions", @"oauth2Permissions", @"oauth2RequirePostResponse", @"oauth2RequirePostResponse", @"passwordCredentials", @"passwordCredentials", @"publicClient", @"publicClient", @"replyUrls", @"replyUrls", @"requiredResourceAccess", @"requiredResourceAccess", @"samlMetadataUrl", @"samlMetadataUrl", @"extensionProperties", @"extensionProperties", @"createdOnBehalfOf", @"createdOnBehalfOf", @"owners", @"owners", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.Application";
        
        
		_appRoles = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_identifierUris = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_keyCredentials = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_knownClientApplications = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_oauth2Permissions = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_passwordCredentials = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_replyUrls = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_requiredResourceAccess = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_extensionProperties = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_owners = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property appId
 *
 */
- (void) setAppId: (NSString *) value {
    _appId = value;
    [self valueChanged:_appId forProperty:@"appId"];
}
       
/** Setter implementation for property appRoles
 *
 */
- (void) setAppRoles: (NSMutableArray *) value {
    _appRoles = value;
    [self valueChanged:_appRoles forProperty:@"appRoles"];
}
       
/** Setter implementation for property availableToOtherTenants
 *
 */
- (void) setAvailableToOtherTenants: (bool) value {
    _availableToOtherTenants = value;
    [self valueChangedForBool:_availableToOtherTenants forProperty:@"availableToOtherTenants"];
}
       
/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChanged:_displayName forProperty:@"displayName"];
}
       
/** Setter implementation for property errorUrl
 *
 */
- (void) setErrorUrl: (NSString *) value {
    _errorUrl = value;
    [self valueChanged:_errorUrl forProperty:@"errorUrl"];
}
       
/** Setter implementation for property groupMembershipClaims
 *
 */
- (void) setGroupMembershipClaims: (NSString *) value {
    _groupMembershipClaims = value;
    [self valueChanged:_groupMembershipClaims forProperty:@"groupMembershipClaims"];
}
       
/** Setter implementation for property homepage
 *
 */
- (void) setHomepage: (NSString *) value {
    _homepage = value;
    [self valueChanged:_homepage forProperty:@"homepage"];
}
       
/** Setter implementation for property identifierUris
 *
 */
- (void) setIdentifierUris: (NSMutableArray *) value {
    _identifierUris = value;
    [self valueChanged:_identifierUris forProperty:@"identifierUris"];
}
       
/** Setter implementation for property keyCredentials
 *
 */
- (void) setKeyCredentials: (NSMutableArray *) value {
    _keyCredentials = value;
    [self valueChanged:_keyCredentials forProperty:@"keyCredentials"];
}
       
/** Setter implementation for property knownClientApplications
 *
 */
- (void) setKnownClientApplications: (NSMutableArray *) value {
    _knownClientApplications = value;
    [self valueChanged:_knownClientApplications forProperty:@"knownClientApplications"];
}
       
/** Setter implementation for property mainLogo
 *
 */
- (void) setMainLogo: (NSStream *) value {
    _mainLogo = value;
    [self valueChanged:_mainLogo forProperty:@"mainLogo"];
}
       
/** Setter implementation for property logoutUrl
 *
 */
- (void) setLogoutUrl: (NSString *) value {
    _logoutUrl = value;
    [self valueChanged:_logoutUrl forProperty:@"logoutUrl"];
}
       
/** Setter implementation for property oauth2AllowImplicitFlow
 *
 */
- (void) setOauth2AllowImplicitFlow: (bool) value {
    _oauth2AllowImplicitFlow = value;
    [self valueChangedForBool:_oauth2AllowImplicitFlow forProperty:@"oauth2AllowImplicitFlow"];
}
       
/** Setter implementation for property oauth2AllowUrlPathMatching
 *
 */
- (void) setOauth2AllowUrlPathMatching: (bool) value {
    _oauth2AllowUrlPathMatching = value;
    [self valueChangedForBool:_oauth2AllowUrlPathMatching forProperty:@"oauth2AllowUrlPathMatching"];
}
       
/** Setter implementation for property oauth2Permissions
 *
 */
- (void) setOauth2Permissions: (NSMutableArray *) value {
    _oauth2Permissions = value;
    [self valueChanged:_oauth2Permissions forProperty:@"oauth2Permissions"];
}
       
/** Setter implementation for property oauth2RequirePostResponse
 *
 */
- (void) setOauth2RequirePostResponse: (bool) value {
    _oauth2RequirePostResponse = value;
    [self valueChangedForBool:_oauth2RequirePostResponse forProperty:@"oauth2RequirePostResponse"];
}
       
/** Setter implementation for property passwordCredentials
 *
 */
- (void) setPasswordCredentials: (NSMutableArray *) value {
    _passwordCredentials = value;
    [self valueChanged:_passwordCredentials forProperty:@"passwordCredentials"];
}
       
/** Setter implementation for property publicClient
 *
 */
- (void) setPublicClient: (bool) value {
    _publicClient = value;
    [self valueChangedForBool:_publicClient forProperty:@"publicClient"];
}
       
/** Setter implementation for property replyUrls
 *
 */
- (void) setReplyUrls: (NSMutableArray *) value {
    _replyUrls = value;
    [self valueChanged:_replyUrls forProperty:@"replyUrls"];
}
       
/** Setter implementation for property requiredResourceAccess
 *
 */
- (void) setRequiredResourceAccess: (NSMutableArray *) value {
    _requiredResourceAccess = value;
    [self valueChanged:_requiredResourceAccess forProperty:@"requiredResourceAccess"];
}
       
/** Setter implementation for property samlMetadataUrl
 *
 */
- (void) setSamlMetadataUrl: (NSString *) value {
    _samlMetadataUrl = value;
    [self valueChanged:_samlMetadataUrl forProperty:@"samlMetadataUrl"];
}
       
/** Setter implementation for property extensionProperties
 *
 */
- (void) setExtensionProperties: (NSMutableArray *) value {
    _extensionProperties = value;
    [self valueChanged:_extensionProperties forProperty:@"extensionProperties"];
}
       
/** Setter implementation for property createdOnBehalfOf
 *
 */
- (void) setCreatedOnBehalfOf: (MSGraphDirectoryObject *) value {
    _createdOnBehalfOf = value;
    [self valueChanged:_createdOnBehalfOf forProperty:@"createdOnBehalfOf"];
}
       
/** Setter implementation for property owners
 *
 */
- (void) setOwners: (NSMutableArray *) value {
    _owners = value;
    [self valueChanged:_owners forProperty:@"owners"];
}
       

@end
