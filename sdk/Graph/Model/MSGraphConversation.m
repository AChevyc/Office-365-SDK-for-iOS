/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphConversation
 *
 */
@implementation MSGraphConversation


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"Topic", @"topic", @"HasAttachments", @"hasAttachments", @"LastDeliveredDateTime", @"lastDeliveredDateTime", @"UniqueSenders", @"uniqueSenders", @"Preview", @"preview", @"Threads", @"threads", @"Id", @"_id", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.Conversation";
        
        
		_uniqueSenders = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_threads = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_topic = [dic objectForKey: @"Topic"] != nil ? [[dic objectForKey: @"Topic"] copy] : _topic;
		_hasAttachments = [dic objectForKey: @"HasAttachments"] != nil ? [[dic objectForKey: @"HasAttachments"] boolValue] : _hasAttachments;
		_lastDeliveredDateTime = [dic objectForKey: @"LastDeliveredDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"LastDeliveredDateTime"]] : _lastDeliveredDateTime;

        if([dic objectForKey: @"UniqueSenders"] != [NSNull null]){
            _uniqueSenders = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"UniqueSenders"] count]];
            
            for (id object in [dic objectForKey: @"UniqueSenders"]) {
                [_uniqueSenders addObject:[object copy]];
            }
        }
        
		_preview = [dic objectForKey: @"Preview"] != nil ? [[dic objectForKey: @"Preview"] copy] : _preview;

        if([dic objectForKey: @"Threads"] != [NSNull null]){
            _threads = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"Threads"] count]];
            
            for (id object in [dic objectForKey: @"Threads"]) {
                [_threads addObject:[[MSGraphConversationThread alloc] initWithDictionary: object]];
            }
        }
        

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [_topic copy], @"Topic",
		 (_hasAttachments?@"true":@"false"), @"HasAttachments",
		 [MSOrcObjectizer stringFromDate:_lastDeliveredDateTime], @"LastDeliveredDateTime",
		 [[NSMutableArray alloc] init], @"UniqueSenders",
		 [_preview copy], @"Preview",
		 [[NSMutableArray alloc] init], @"Threads",
            nil];
}


/** Setter implementation for property topic
 *
 */
- (void) setTopic: (NSString *) value {
    _topic = value;
    [self valueChangedFor:@"Topic"];
}
       
/** Setter implementation for property hasAttachments
 *
 */
- (void) setHasAttachments: (bool) value {
    _hasAttachments = value;
    [self valueChangedFor:@"HasAttachments"];
}
       
/** Setter implementation for property lastDeliveredDateTime
 *
 */
- (void) setLastDeliveredDateTime: (NSDate *) value {
    _lastDeliveredDateTime = value;
    [self valueChangedFor:@"LastDeliveredDateTime"];
}
       
/** Setter implementation for property uniqueSenders
 *
 */
- (void) setUniqueSenders: (NSMutableArray *) value {
    _uniqueSenders = value;
    [self valueChangedFor:@"UniqueSenders"];
}
       
/** Setter implementation for property preview
 *
 */
- (void) setPreview: (NSString *) value {
    _preview = value;
    [self valueChangedFor:@"Preview"];
}
       
/** Setter implementation for property threads
 *
 */
- (void) setThreads: (NSMutableArray *) value {
    _threads = value;
    [self valueChangedFor:@"Threads"];
}
       

@end
