/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphKeyCredential
 *
 */
@implementation MSGraphKeyCredential


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"customKeyIdentifier", @"customKeyIdentifier", @"endDate", @"endDate", @"keyId", @"keyId", @"startDate", @"startDate", @"type", @"type", @"usage", @"usage", @"value", @"value", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.KeyCredential";

        
    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_customKeyIdentifier = [dic objectForKey: @"customKeyIdentifier"] != nil ? [MSOrcObjectizer dataFromString:[dic objectForKey: @"customKeyIdentifier"]] : _customKeyIdentifier;
		_endDate = [dic objectForKey: @"endDate"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"endDate"]] : _endDate;
		_keyId = [dic objectForKey: @"keyId"] != nil ? [[dic objectForKey: @"keyId"] copy] : _keyId;
		_startDate = [dic objectForKey: @"startDate"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"startDate"]] : _startDate;
		_type = [dic objectForKey: @"type"] != nil ? [[dic objectForKey: @"type"] copy] : _type;
		_usage = [dic objectForKey: @"usage"] != nil ? [[dic objectForKey: @"usage"] copy] : _usage;
		_value = [dic objectForKey: @"value"] != nil ? [MSOrcObjectizer dataFromString:[dic objectForKey: @"value"]] : _value;

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [MSOrcObjectizer stringFromData:_customKeyIdentifier], @"customKeyIdentifier",
		 [MSOrcObjectizer stringFromDate:_endDate], @"endDate",
		 [_keyId copy], @"keyId",
		 [MSOrcObjectizer stringFromDate:_startDate], @"startDate",
		 [_type copy], @"type",
		 [_usage copy], @"usage",
		 [MSOrcObjectizer stringFromData:_value], @"value",
            nil];
}


/** Setter implementation for property customKeyIdentifier
 *
 */
- (void) setCustomKeyIdentifier: (NSData *) value {
    _customKeyIdentifier = value;
    [self valueChangedFor:@"customKeyIdentifier"];
}
       
/** Setter implementation for property endDate
 *
 */
- (void) setEndDate: (NSDate *) value {
    _endDate = value;
    [self valueChangedFor:@"endDate"];
}
       
/** Setter implementation for property keyId
 *
 */
- (void) setKeyId: (NSString *) value {
    _keyId = value;
    [self valueChangedFor:@"keyId"];
}
       
/** Setter implementation for property startDate
 *
 */
- (void) setStartDate: (NSDate *) value {
    _startDate = value;
    [self valueChangedFor:@"startDate"];
}
       
/** Setter implementation for property type
 *
 */
- (void) setType: (NSString *) value {
    _type = value;
    [self valueChangedFor:@"type"];
}
       
/** Setter implementation for property usage
 *
 */
- (void) setUsage: (NSString *) value {
    _usage = value;
    [self valueChangedFor:@"usage"];
}
       
/** Setter implementation for property value
 *
 */
- (void) setValue: (NSData *) value {
    _value = value;
    [self valueChangedFor:@"value"];
}
       

@end
