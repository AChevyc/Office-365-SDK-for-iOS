/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/


#ifndef MSGRAPHGROUP_H
#define MSGRAPHGROUP_H

#import <Foundation/Foundation.h>

@class MSGraphProvisioningError;
@class MSGraphAppRoleAssignment;
@class MSGraphDirectoryObject;
@class MSGraphPhoto;
@class MSGraphConversation;
@class MSGraphConversationThread;
@class MSGraphCalendar;
@class MSGraphEvent;
@class MSGraphItem;
#import "MSGraphGroupAccessType.h"
#import "MSGraphDirectoryObject.h"

/** Interface MSGraphGroup
 *
 */
@interface MSGraphGroup : MSGraphDirectoryObject

/** Property _description
 *
 */
@property (nonatomic,  copy, setter=setDescription:, getter=_description) NSString * _description;

/** Property dirSyncEnabled
 *
 */
@property (nonatomic,  setter=setDirSyncEnabled:, getter=dirSyncEnabled) bool dirSyncEnabled;

/** Property displayName
 *
 */
@property (nonatomic,  copy, setter=setDisplayName:, getter=displayName) NSString * displayName;

/** Property creationOptions
 *
 */
@property (nonatomic,  copy, setter=setCreationOptions:, getter=creationOptions) NSMutableArray * creationOptions;

/** Property groupTypes
 *
 */
@property (nonatomic,  copy, setter=setGroupTypes:, getter=groupTypes) NSMutableArray * groupTypes;

/** Property isPublic
 *
 */
@property (nonatomic,  setter=setIsPublic:, getter=isPublic) bool isPublic;

/** Property lastDirSyncTime
 *
 */
@property (nonatomic,  copy, setter=setLastDirSyncTime:, getter=lastDirSyncTime) NSDate * lastDirSyncTime;

/** Property mail
 *
 */
@property (nonatomic,  copy, setter=setMail:, getter=mail) NSString * mail;

/** Property mailNickname
 *
 */
@property (nonatomic,  copy, setter=setMailNickname:, getter=mailNickname) NSString * mailNickname;

/** Property mailEnabled
 *
 */
@property (nonatomic,  setter=setMailEnabled:, getter=mailEnabled) bool mailEnabled;

/** Property onPremisesSecurityIdentifier
 *
 */
@property (nonatomic,  copy, setter=setOnPremisesSecurityIdentifier:, getter=onPremisesSecurityIdentifier) NSString * onPremisesSecurityIdentifier;

/** Property provisioningErrors
 *
 */
@property (nonatomic,  copy, setter=setProvisioningErrors:, getter=provisioningErrors) NSMutableArray * provisioningErrors;

/** Property proxyAddresses
 *
 */
@property (nonatomic,  copy, setter=setProxyAddresses:, getter=proxyAddresses) NSMutableArray * proxyAddresses;

/** Property securityEnabled
 *
 */
@property (nonatomic,  setter=setSecurityEnabled:, getter=securityEnabled) bool securityEnabled;

/** Property accessType
 *
 */
@property (nonatomic,  setter=setAccessType:, getter=accessType) MSGraphGroupAccessType accessType;

- (void)setAccessTypeString:(NSString *)value;

/** Property emailAddress
 *
 */
@property (nonatomic,  copy, setter=setEmailAddress:, getter=emailAddress) NSString * emailAddress;

/** Property allowExternalSenders
 *
 */
@property (nonatomic,  setter=setAllowExternalSenders:, getter=allowExternalSenders) bool allowExternalSenders;

/** Property autoSubscribeNewMembers
 *
 */
@property (nonatomic,  setter=setAutoSubscribeNewMembers:, getter=autoSubscribeNewMembers) bool autoSubscribeNewMembers;

/** Property isSubscribedByMail
 *
 */
@property (nonatomic,  setter=setIsSubscribedByMail:, getter=isSubscribedByMail) bool isSubscribedByMail;

/** Property isFavorite
 *
 */
@property (nonatomic,  setter=setIsFavorite:, getter=isFavorite) bool isFavorite;

/** Property unseenCount
 *
 */
@property (nonatomic,  setter=setUnseenCount:, getter=unseenCount) int unseenCount;

/** Property appRoleAssignments
 *
 */
@property (nonatomic,  copy, setter=setAppRoleAssignments:, getter=appRoleAssignments) NSMutableArray * appRoleAssignments;

/** Property members
 *
 */
@property (nonatomic,  copy, setter=setMembers:, getter=members) NSMutableArray * members;

/** Property memberOf
 *
 */
@property (nonatomic,  copy, setter=setMemberOf:, getter=memberOf) NSMutableArray * memberOf;

/** Property createdOnBehalfOf
 *
 */
@property (nonatomic,  copy, setter=setCreatedOnBehalfOf:, getter=createdOnBehalfOf) MSGraphDirectoryObject * createdOnBehalfOf;

/** Property owners
 *
 */
@property (nonatomic,  copy, setter=setOwners:, getter=owners) NSMutableArray * owners;

/** Property groupPhoto
 *
 */
@property (nonatomic,  copy, setter=setGroupPhoto:, getter=groupPhoto) MSGraphPhoto * groupPhoto;

/** Property groupPhotos
 *
 */
@property (nonatomic,  copy, setter=setGroupPhotos:, getter=groupPhotos) NSMutableArray * groupPhotos;

/** Property conversations
 *
 */
@property (nonatomic,  copy, setter=setConversations:, getter=conversations) NSMutableArray * conversations;

/** Property threads
 *
 */
@property (nonatomic,  copy, setter=setThreads:, getter=threads) NSMutableArray * threads;

/** Property calendar
 *
 */
@property (nonatomic,  copy, setter=setCalendar:, getter=calendar) MSGraphCalendar * calendar;

/** Property events
 *
 */
@property (nonatomic,  copy, setter=setEvents:, getter=events) NSMutableArray * events;

/** Property calendarView
 *
 */
@property (nonatomic,  copy, setter=setCalendarView:, getter=calendarView) NSMutableArray * calendarView;

/** Property files
 *
 */
@property (nonatomic,  copy, setter=setFiles:, getter=files) NSMutableArray * files;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings;


@end

#endif
