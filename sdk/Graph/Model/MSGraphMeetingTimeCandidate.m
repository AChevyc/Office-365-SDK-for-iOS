/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphMeetingTimeCandidate
 *
 */
@implementation MSGraphMeetingTimeCandidate


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"MeetingTimeSlot", @"meetingTimeSlot", @"Confidence", @"confidence", @"Score", @"score", @"OrganizerAvailability", @"organizerAvailability", @"AttendeeAvailability", @"attendeeAvailability", @"Locations", @"locations", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.MeetingTimeCandidate";

        
		_attendeeAvailability = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_locations = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_meetingTimeSlot = [dic objectForKey: @"MeetingTimeSlot"] != nil ? [[MSGraphTimeSlot alloc] initWithDictionary: [dic objectForKey: @"MeetingTimeSlot"]] : _meetingTimeSlot;
		_confidence = [dic objectForKey: @"Confidence"] != nil ? [[dic objectForKey: @"Confidence"] doubleValue] : _confidence;
		_score = [dic objectForKey: @"Score"] != nil ? [[dic objectForKey: @"Score"] intValue] : _score;
		_organizerAvailability = [dic objectForKey: @"OrganizerAvailability"] != nil ? [MSGraphFreeBusyStatusSerializer fromString:[dic objectForKey: @"OrganizerAvailability"]] : _organizerAvailability;

        if([dic objectForKey: @"AttendeeAvailability"] != [NSNull null]){
            _attendeeAvailability = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"AttendeeAvailability"] count]];
            
            for (id object in [dic objectForKey: @"AttendeeAvailability"]) {
                [_attendeeAvailability addObject:[[MSGraphAttendeeAvailability alloc] initWithDictionary: object]];
            }
        }
        

        if([dic objectForKey: @"Locations"] != [NSNull null]){
            _locations = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"Locations"] count]];
            
            for (id object in [dic objectForKey: @"Locations"]) {
                [_locations addObject:[[MSGraphLocation alloc] initWithDictionary: object]];
            }
        }
        

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.meetingTimeSlot toDictionary]; if (curVal!=nil) [dic setValue: curVal forKey: @"MeetingTimeSlot"];}
	{id curVal = [NSNumber numberWithDouble: self.confidence]; if (curVal!=nil) [dic setValue: curVal forKey: @"Confidence"];}
	{id curVal = [NSNumber numberWithInt: self.score]; if (curVal!=nil) [dic setValue: curVal forKey: @"Score"];}
	{id curVal = [MSGraphFreeBusyStatusSerializer toString:self.organizerAvailability]; if (curVal!=nil) [dic setValue: curVal forKey: @"OrganizerAvailability"];}
	{id curVal = nil/*MUST SERIALIZE COLLECTION!*/; if (curVal!=nil) [dic setValue: curVal forKey: @"AttendeeAvailability"];}
	{id curVal = nil/*MUST SERIALIZE COLLECTION!*/; if (curVal!=nil) [dic setValue: curVal forKey: @"Locations"];}
    [dic setValue: @"#Microsoft.Graph.MeetingTimeCandidate" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.meetingTimeSlot;
    if([self.updatedValues containsObject:@"MeetingTimeSlot"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"MeetingTimeSlot"];
    }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"MeetingTimeSlot"];
            }
        
            }}
	{id curVal = self.confidence;
    if([self.updatedValues containsObject:@"Confidence"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[NSNumber numberWithDouble: curVal] forKey: @"Confidence"];
    }
    }
	{id curVal = self.score;
    if([self.updatedValues containsObject:@"Score"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[NSNumber numberWithInt: curVal] forKey: @"Score"];
    }
    }
	{id curVal = self.organizerAvailability;
    if([self.updatedValues containsObject:@"OrganizerAvailability"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[MSGraphFreeBusyStatusSerializer toString:curVal] forKey: @"OrganizerAvailability"];
    }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"OrganizerAvailability"];
            }
        
            }}
	{id curVal = self.attendeeAvailability;
    if([self.updatedValues containsObject:@"AttendeeAvailability"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"AttendeeAvailability"];
    }
        else
    {
                
        //Check collection change:
        
            }}
	{id curVal = self.locations;
    if([self.updatedValues containsObject:@"Locations"])
    {
        [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"Locations"];
    }
        else
    {
                
        //Check collection change:
        
            }}
    return dic;
}


/** Setter implementation for property meetingTimeSlot
 *
 */
- (void) setMeetingTimeSlot: (MSGraphTimeSlot *) value {
    _meetingTimeSlot = value;
    [self valueChangedFor:@"MeetingTimeSlot"];
}
       
/** Setter implementation for property confidence
 *
 */
- (void) setConfidence: (double) value {
    _confidence = value;
    [self valueChangedFor:@"Confidence"];
}
       
/** Setter implementation for property score
 *
 */
- (void) setScore: (int) value {
    _score = value;
    [self valueChangedFor:@"Score"];
}
       
/** Setter implementation for property organizerAvailability
 *
 */
- (void) setOrganizerAvailability: (MSGraphFreeBusyStatus) value {
    _organizerAvailability = value;
    [self valueChangedFor:@"OrganizerAvailability"];
}
       

- (void)setOrganizerAvailabilityString:(NSString *)string {
        
    _organizerAvailability = [MSGraphFreeBusyStatusSerializer fromString:string];
    [self valueChangedFor:@"OrganizerAvailability"]; 
}

/** Setter implementation for property attendeeAvailability
 *
 */
- (void) setAttendeeAvailability: (NSMutableArray *) value {
    _attendeeAvailability = value;
    [self valueChangedFor:@"AttendeeAvailability"];
}
       
/** Setter implementation for property locations
 *
 */
- (void) setLocations: (NSMutableArray *) value {
    _locations = value;
    [self valueChangedFor:@"Locations"];
}
       

@end
