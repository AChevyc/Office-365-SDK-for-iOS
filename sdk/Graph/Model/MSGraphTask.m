/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphTask
 *
 */
@implementation MSGraphTask


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"createdBy", @"createdBy", @"assignedTo", @"assignedTo", @"planId", @"planId", @"bucketId", @"bucketId", @"title", @"title", @"orderHint", @"orderHint", @"assigneePriority", @"assigneePriority", @"percentComplete", @"percentComplete", @"startDateTime", @"startDateTime", @"assignedDateTime", @"assignedDateTime", @"createdDateTime", @"createdDateTime", @"assignedBy", @"assignedBy", @"dueDateTime", @"dueDateTime", @"hasDescription", @"hasDescription", @"previewType", @"previewType", @"completedDateTime", @"completedDateTime", @"appliedCategories", @"appliedCategories", @"conversationThreadId", @"conversationThreadId", @"id", @"_id", @"details", @"details", @"assignedToTaskBoardFormat", @"assignedToTaskBoardFormat", @"progressTaskBoardFormat", @"progressTaskBoardFormat", @"bucketTaskBoardFormat", @"bucketTaskBoardFormat", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.task";
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_createdBy = [dic objectForKey: @"createdBy"] != nil ? [[dic objectForKey: @"createdBy"] copy] : _createdBy;
		_assignedTo = [dic objectForKey: @"assignedTo"] != nil ? [[dic objectForKey: @"assignedTo"] copy] : _assignedTo;
		_planId = [dic objectForKey: @"planId"] != nil ? [[dic objectForKey: @"planId"] copy] : _planId;
		_bucketId = [dic objectForKey: @"bucketId"] != nil ? [[dic objectForKey: @"bucketId"] copy] : _bucketId;
		_title = [dic objectForKey: @"title"] != nil ? [[dic objectForKey: @"title"] copy] : _title;
		_orderHint = [dic objectForKey: @"orderHint"] != nil ? [[dic objectForKey: @"orderHint"] copy] : _orderHint;
		_assigneePriority = [dic objectForKey: @"assigneePriority"] != nil ? [[dic objectForKey: @"assigneePriority"] copy] : _assigneePriority;
		_percentComplete = [dic objectForKey: @"percentComplete"] != nil ? [[dic objectForKey: @"percentComplete"] intValue] : _percentComplete;
		_startDateTime = [dic objectForKey: @"startDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"startDateTime"]] : _startDateTime;
		_assignedDateTime = [dic objectForKey: @"assignedDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"assignedDateTime"]] : _assignedDateTime;
		_createdDateTime = [dic objectForKey: @"createdDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"createdDateTime"]] : _createdDateTime;
		_assignedBy = [dic objectForKey: @"assignedBy"] != nil ? [[dic objectForKey: @"assignedBy"] copy] : _assignedBy;
		_dueDateTime = [dic objectForKey: @"dueDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"dueDateTime"]] : _dueDateTime;
		_hasDescription = [dic objectForKey: @"hasDescription"] != nil ? [[dic objectForKey: @"hasDescription"] boolValue] : _hasDescription;
		_previewType = [dic objectForKey: @"previewType"] != nil ? [MSGraphPreviewTypeSerializer fromString:[dic objectForKey: @"previewType"]] : _previewType;
		_completedDateTime = [dic objectForKey: @"completedDateTime"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"completedDateTime"]] : _completedDateTime;
		_appliedCategories = [dic objectForKey: @"appliedCategories"] != nil ? [[MSGraphAppliedCategoriesCollection alloc] initWithDictionary: [dic objectForKey: @"appliedCategories"]] : _appliedCategories;
		_conversationThreadId = [dic objectForKey: @"conversationThreadId"] != nil ? [[dic objectForKey: @"conversationThreadId"] copy] : _conversationThreadId;
		__id = [dic objectForKey: @"id"] != nil ? [[dic objectForKey: @"id"] copy] : __id;
		_details = [dic objectForKey: @"details"] != nil ? [[MSGraphTaskDetails alloc] initWithDictionary: [dic objectForKey: @"details"]] : _details;
		_assignedToTaskBoardFormat = [dic objectForKey: @"assignedToTaskBoardFormat"] != nil ? [[MSGraphTaskBoardTaskFormat alloc] initWithDictionary: [dic objectForKey: @"assignedToTaskBoardFormat"]] : _assignedToTaskBoardFormat;
		_progressTaskBoardFormat = [dic objectForKey: @"progressTaskBoardFormat"] != nil ? [[MSGraphTaskBoardTaskFormat alloc] initWithDictionary: [dic objectForKey: @"progressTaskBoardFormat"]] : _progressTaskBoardFormat;
		_bucketTaskBoardFormat = [dic objectForKey: @"bucketTaskBoardFormat"] != nil ? [[MSGraphTaskBoardTaskFormat alloc] initWithDictionary: [dic objectForKey: @"bucketTaskBoardFormat"]] : _bucketTaskBoardFormat;

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.createdBy copy];if (curVal!=nil) [dic setValue: curVal forKey: @"createdBy"];}
	{id curVal = [self.assignedTo copy];if (curVal!=nil) [dic setValue: curVal forKey: @"assignedTo"];}
	{id curVal = [self.planId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"planId"];}
	{id curVal = [self.bucketId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"bucketId"];}
	{id curVal = [self.title copy];if (curVal!=nil) [dic setValue: curVal forKey: @"title"];}
	{id curVal = [self.orderHint copy];if (curVal!=nil) [dic setValue: curVal forKey: @"orderHint"];}
	{id curVal = [self.assigneePriority copy];if (curVal!=nil) [dic setValue: curVal forKey: @"assigneePriority"];}
	{[dic setValue: [NSNumber numberWithInt: self.percentComplete] forKey: @"percentComplete"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.startDateTime];if (curVal!=nil) [dic setValue: curVal forKey: @"startDateTime"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.assignedDateTime];if (curVal!=nil) [dic setValue: curVal forKey: @"assignedDateTime"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.createdDateTime];if (curVal!=nil) [dic setValue: curVal forKey: @"createdDateTime"];}
	{id curVal = [self.assignedBy copy];if (curVal!=nil) [dic setValue: curVal forKey: @"assignedBy"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.dueDateTime];if (curVal!=nil) [dic setValue: curVal forKey: @"dueDateTime"];}
	{[dic setValue: (self.hasDescription?@"true":@"false") forKey: @"hasDescription"];}
	{[dic setValue: [MSGraphPreviewTypeSerializer toString:self.previewType] forKey: @"previewType"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.completedDateTime];if (curVal!=nil) [dic setValue: curVal forKey: @"completedDateTime"];}
	{id curVal = [self.appliedCategories toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"appliedCategories"];}
	{id curVal = [self.conversationThreadId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"conversationThreadId"];}
	{id curVal = [self._id copy];if (curVal!=nil) [dic setValue: curVal forKey: @"id"];}
	{id curVal = [self.details toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"details"];}
	{id curVal = [self.assignedToTaskBoardFormat toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"assignedToTaskBoardFormat"];}
	{id curVal = [self.progressTaskBoardFormat toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"progressTaskBoardFormat"];}
	{id curVal = [self.bucketTaskBoardFormat toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"bucketTaskBoardFormat"];}
    [dic setValue: @"#microsoft.graph.task" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.createdBy;
    if([self.updatedValues containsObject:@"createdBy"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"createdBy"];
            }
    }
	{id curVal = self.assignedTo;
    if([self.updatedValues containsObject:@"assignedTo"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"assignedTo"];
            }
    }
	{id curVal = self.planId;
    if([self.updatedValues containsObject:@"planId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"planId"];
            }
    }
	{id curVal = self.bucketId;
    if([self.updatedValues containsObject:@"bucketId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"bucketId"];
            }
    }
	{id curVal = self.title;
    if([self.updatedValues containsObject:@"title"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"title"];
            }
    }
	{id curVal = self.orderHint;
    if([self.updatedValues containsObject:@"orderHint"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"orderHint"];
            }
    }
	{id curVal = self.assigneePriority;
    if([self.updatedValues containsObject:@"assigneePriority"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"assigneePriority"];
            }
    }
	{id curVal = self.percentComplete;
    if([self.updatedValues containsObject:@"percentComplete"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[NSNumber numberWithInt: curVal] forKey: @"percentComplete"];
            }
    }
	{id curVal = self.startDateTime;
    if([self.updatedValues containsObject:@"startDateTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"startDateTime"];
            }
    }
	{id curVal = self.assignedDateTime;
    if([self.updatedValues containsObject:@"assignedDateTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"assignedDateTime"];
            }
    }
	{id curVal = self.createdDateTime;
    if([self.updatedValues containsObject:@"createdDateTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"createdDateTime"];
            }
    }
	{id curVal = self.assignedBy;
    if([self.updatedValues containsObject:@"assignedBy"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"assignedBy"];
            }
    }
	{id curVal = self.dueDateTime;
    if([self.updatedValues containsObject:@"dueDateTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"dueDateTime"];
            }
    }
	{id curVal = self.hasDescription;
    if([self.updatedValues containsObject:@"hasDescription"])
    {
                [dic setValue: curVal==nil?[NSNull null]:(curVal?@"true":@"false") forKey: @"hasDescription"];
            }
    }
	{id curVal = self.previewType;
    if([self.updatedValues containsObject:@"previewType"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSGraphPreviewTypeSerializer toString:curVal] forKey: @"previewType"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"previewType"];
            }
        
            }}
	{id curVal = self.completedDateTime;
    if([self.updatedValues containsObject:@"completedDateTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"completedDateTime"];
            }
    }
	{id curVal = self.appliedCategories;
    if([self.updatedValues containsObject:@"appliedCategories"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"appliedCategories"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"appliedCategories"];
            }
        
            }}
	{id curVal = self.conversationThreadId;
    if([self.updatedValues containsObject:@"conversationThreadId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"conversationThreadId"];
            }
    }
	{id curVal = self._id;
    if([self.updatedValues containsObject:@"id"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"id"];
            }
    }
	{id curVal = self.details;
    if([self.updatedValues containsObject:@"details"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"details"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"details"];
            }
        
            }}
	{id curVal = self.assignedToTaskBoardFormat;
    if([self.updatedValues containsObject:@"assignedToTaskBoardFormat"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"assignedToTaskBoardFormat"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"assignedToTaskBoardFormat"];
            }
        
            }}
	{id curVal = self.progressTaskBoardFormat;
    if([self.updatedValues containsObject:@"progressTaskBoardFormat"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"progressTaskBoardFormat"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"progressTaskBoardFormat"];
            }
        
            }}
	{id curVal = self.bucketTaskBoardFormat;
    if([self.updatedValues containsObject:@"bucketTaskBoardFormat"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"bucketTaskBoardFormat"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"bucketTaskBoardFormat"];
            }
        
            }}
    return dic;
}


/** Setter implementation for property createdBy
 *
 */
- (void) setCreatedBy: (NSString *) value {
    _createdBy = value;
    [self valueChangedFor:@"createdBy"];
}
       
/** Setter implementation for property assignedTo
 *
 */
- (void) setAssignedTo: (NSString *) value {
    _assignedTo = value;
    [self valueChangedFor:@"assignedTo"];
}
       
/** Setter implementation for property planId
 *
 */
- (void) setPlanId: (NSString *) value {
    _planId = value;
    [self valueChangedFor:@"planId"];
}
       
/** Setter implementation for property bucketId
 *
 */
- (void) setBucketId: (NSString *) value {
    _bucketId = value;
    [self valueChangedFor:@"bucketId"];
}
       
/** Setter implementation for property title
 *
 */
- (void) setTitle: (NSString *) value {
    _title = value;
    [self valueChangedFor:@"title"];
}
       
/** Setter implementation for property orderHint
 *
 */
- (void) setOrderHint: (NSString *) value {
    _orderHint = value;
    [self valueChangedFor:@"orderHint"];
}
       
/** Setter implementation for property assigneePriority
 *
 */
- (void) setAssigneePriority: (NSString *) value {
    _assigneePriority = value;
    [self valueChangedFor:@"assigneePriority"];
}
       
/** Setter implementation for property percentComplete
 *
 */
- (void) setPercentComplete: (int) value {
    _percentComplete = value;
    [self valueChangedFor:@"percentComplete"];
}
       
/** Setter implementation for property startDateTime
 *
 */
- (void) setStartDateTime: (NSDate *) value {
    _startDateTime = value;
    [self valueChangedFor:@"startDateTime"];
}
       
/** Setter implementation for property assignedDateTime
 *
 */
- (void) setAssignedDateTime: (NSDate *) value {
    _assignedDateTime = value;
    [self valueChangedFor:@"assignedDateTime"];
}
       
/** Setter implementation for property createdDateTime
 *
 */
- (void) setCreatedDateTime: (NSDate *) value {
    _createdDateTime = value;
    [self valueChangedFor:@"createdDateTime"];
}
       
/** Setter implementation for property assignedBy
 *
 */
- (void) setAssignedBy: (NSString *) value {
    _assignedBy = value;
    [self valueChangedFor:@"assignedBy"];
}
       
/** Setter implementation for property dueDateTime
 *
 */
- (void) setDueDateTime: (NSDate *) value {
    _dueDateTime = value;
    [self valueChangedFor:@"dueDateTime"];
}
       
/** Setter implementation for property hasDescription
 *
 */
- (void) setHasDescription: (bool) value {
    _hasDescription = value;
    [self valueChangedFor:@"hasDescription"];
}
       
/** Setter implementation for property previewType
 *
 */
- (void) setPreviewType: (MSGraphPreviewType) value {
    _previewType = value;
    [self valueChangedFor:@"previewType"];
}
       

- (void)setPreviewTypeString:(NSString *)string {
        
    _previewType = [MSGraphPreviewTypeSerializer fromString:string];
    [self valueChangedFor:@"previewType"]; 
}

/** Setter implementation for property completedDateTime
 *
 */
- (void) setCompletedDateTime: (NSDate *) value {
    _completedDateTime = value;
    [self valueChangedFor:@"completedDateTime"];
}
       
/** Setter implementation for property appliedCategories
 *
 */
- (void) setAppliedCategories: (MSGraphAppliedCategoriesCollection *) value {
    _appliedCategories = value;
    [self valueChangedFor:@"appliedCategories"];
}
       
/** Setter implementation for property conversationThreadId
 *
 */
- (void) setConversationThreadId: (NSString *) value {
    _conversationThreadId = value;
    [self valueChangedFor:@"conversationThreadId"];
}
       
/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChangedFor:@"id"];
}
       
/** Setter implementation for property details
 *
 */
- (void) setDetails: (MSGraphTaskDetails *) value {
    _details = value;
    [self valueChangedFor:@"details"];
}
       
/** Setter implementation for property assignedToTaskBoardFormat
 *
 */
- (void) setAssignedToTaskBoardFormat: (MSGraphTaskBoardTaskFormat *) value {
    _assignedToTaskBoardFormat = value;
    [self valueChangedFor:@"assignedToTaskBoardFormat"];
}
       
/** Setter implementation for property progressTaskBoardFormat
 *
 */
- (void) setProgressTaskBoardFormat: (MSGraphTaskBoardTaskFormat *) value {
    _progressTaskBoardFormat = value;
    [self valueChangedFor:@"progressTaskBoardFormat"];
}
       
/** Setter implementation for property bucketTaskBoardFormat
 *
 */
- (void) setBucketTaskBoardFormat: (MSGraphTaskBoardTaskFormat *) value {
    _bucketTaskBoardFormat = value;
    [self valueChangedFor:@"bucketTaskBoardFormat"];
}
       

@end
