/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"



/** Implementation for MSGraphMailFolder
 *
 */
@implementation MSGraphMailFolder


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"DisplayName", @"displayName", @"ParentFolderId", @"parentFolderId", @"ChildFolderCount", @"childFolderCount", @"UnreadItemCount", @"unreadItemCount", @"TotalItemCount", @"totalItemCount", @"Messages", @"messages", @"ChildFolders", @"childFolders", @"Id", @"_id", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.MailFolder";
        
        
		_messages = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_childFolders = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_displayName = [dic objectForKey: @"DisplayName"] != nil ? [[dic objectForKey: @"DisplayName"] copy] : _displayName;
		_parentFolderId = [dic objectForKey: @"ParentFolderId"] != nil ? [[dic objectForKey: @"ParentFolderId"] copy] : _parentFolderId;
		_childFolderCount = [dic objectForKey: @"ChildFolderCount"] != nil ? [[dic objectForKey: @"ChildFolderCount"] intValue] : _childFolderCount;
		_unreadItemCount = [dic objectForKey: @"UnreadItemCount"] != nil ? [[dic objectForKey: @"UnreadItemCount"] intValue] : _unreadItemCount;
		_totalItemCount = [dic objectForKey: @"TotalItemCount"] != nil ? [[dic objectForKey: @"TotalItemCount"] intValue] : _totalItemCount;

        if([dic objectForKey: @"Messages"] != [NSNull null]){
            _messages = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"Messages"] count]];
            
            for (id object in [dic objectForKey: @"Messages"]) {
                [_messages addObject:[[MSGraphMessage alloc] initWithDictionary: object]];
            }
        }
        

        if([dic objectForKey: @"ChildFolders"] != [NSNull null]){
            _childFolders = [NSMutableArray arrayWithCapacity:[[dic objectForKey: @"ChildFolders"] count]];
            
            for (id object in [dic objectForKey: @"ChildFolders"]) {
                [_childFolders addObject:[[MSGraphMailFolder alloc] initWithDictionary: object]];
            }
        }
        

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [_displayName copy], @"DisplayName",
		 [_parentFolderId copy], @"ParentFolderId",
		 [NSNumber numberWithInt: _childFolderCount], @"ChildFolderCount",
		 [NSNumber numberWithInt: _unreadItemCount], @"UnreadItemCount",
		 [NSNumber numberWithInt: _totalItemCount], @"TotalItemCount",
		 [[NSMutableArray alloc] init], @"Messages",
		 [[NSMutableArray alloc] init], @"ChildFolders",
            nil];
}


/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChangedFor:@"DisplayName"];
}
       
/** Setter implementation for property parentFolderId
 *
 */
- (void) setParentFolderId: (NSString *) value {
    _parentFolderId = value;
    [self valueChangedFor:@"ParentFolderId"];
}
       
/** Setter implementation for property childFolderCount
 *
 */
- (void) setChildFolderCount: (int) value {
    _childFolderCount = value;
    [self valueChangedFor:@"ChildFolderCount"];
}
       
/** Setter implementation for property unreadItemCount
 *
 */
- (void) setUnreadItemCount: (int) value {
    _unreadItemCount = value;
    [self valueChangedFor:@"UnreadItemCount"];
}
       
/** Setter implementation for property totalItemCount
 *
 */
- (void) setTotalItemCount: (int) value {
    _totalItemCount = value;
    [self valueChangedFor:@"TotalItemCount"];
}
       
/** Setter implementation for property messages
 *
 */
- (void) setMessages: (NSMutableArray *) value {
    _messages = value;
    [self valueChangedFor:@"Messages"];
}
       
/** Setter implementation for property childFolders
 *
 */
- (void) setChildFolders: (NSMutableArray *) value {
    _childFolders = value;
    [self valueChangedFor:@"ChildFolders"];
}
       

@end
