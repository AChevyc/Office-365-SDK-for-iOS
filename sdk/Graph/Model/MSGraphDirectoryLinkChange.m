/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphDirectoryLinkChange
 *
 */
@implementation MSGraphDirectoryLinkChange


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"associationType", @"associationType", @"sourceObjectId", @"sourceObjectId", @"sourceObjectType", @"sourceObjectType", @"sourceObjectUri", @"sourceObjectUri", @"targetObjectId", @"targetObjectId", @"targetObjectType", @"targetObjectType", @"targetObjectUri", @"targetObjectUri", @"objectType", @"objectType", @"objectId", @"objectId", @"deletionTimestamp", @"deletionTimestamp", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.DirectoryLinkChange";
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_associationType = [dic objectForKey: @"associationType"] != nil ? [[dic objectForKey: @"associationType"] copy] : _associationType;
		_sourceObjectId = [dic objectForKey: @"sourceObjectId"] != nil ? [[dic objectForKey: @"sourceObjectId"] copy] : _sourceObjectId;
		_sourceObjectType = [dic objectForKey: @"sourceObjectType"] != nil ? [[dic objectForKey: @"sourceObjectType"] copy] : _sourceObjectType;
		_sourceObjectUri = [dic objectForKey: @"sourceObjectUri"] != nil ? [[dic objectForKey: @"sourceObjectUri"] copy] : _sourceObjectUri;
		_targetObjectId = [dic objectForKey: @"targetObjectId"] != nil ? [[dic objectForKey: @"targetObjectId"] copy] : _targetObjectId;
		_targetObjectType = [dic objectForKey: @"targetObjectType"] != nil ? [[dic objectForKey: @"targetObjectType"] copy] : _targetObjectType;
		_targetObjectUri = [dic objectForKey: @"targetObjectUri"] != nil ? [[dic objectForKey: @"targetObjectUri"] copy] : _targetObjectUri;
		self.objectType = [dic objectForKey: @"objectType"] != nil ? [[dic objectForKey: @"objectType"] copy] : self.objectType;
		self.objectId = [dic objectForKey: @"objectId"] != nil ? [[dic objectForKey: @"objectId"] copy] : self.objectId;
		self.deletionTimestamp = [dic objectForKey: @"deletionTimestamp"] != nil ? [MSOrcObjectizer dateFromString:[dic objectForKey: @"deletionTimestamp"]] : self.deletionTimestamp;

    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.associationType copy];if (curVal!=nil) [dic setValue: curVal forKey: @"associationType"];}
	{id curVal = [self.sourceObjectId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"sourceObjectId"];}
	{id curVal = [self.sourceObjectType copy];if (curVal!=nil) [dic setValue: curVal forKey: @"sourceObjectType"];}
	{id curVal = [self.sourceObjectUri copy];if (curVal!=nil) [dic setValue: curVal forKey: @"sourceObjectUri"];}
	{id curVal = [self.targetObjectId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"targetObjectId"];}
	{id curVal = [self.targetObjectType copy];if (curVal!=nil) [dic setValue: curVal forKey: @"targetObjectType"];}
	{id curVal = [self.targetObjectUri copy];if (curVal!=nil) [dic setValue: curVal forKey: @"targetObjectUri"];}
	{id curVal = [self.objectType copy];if (curVal!=nil) [dic setValue: curVal forKey: @"objectType"];}
	{id curVal = [self.objectId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"objectId"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.deletionTimestamp];if (curVal!=nil) [dic setValue: curVal forKey: @"deletionTimestamp"];}
    [dic setValue: @"#microsoft.graph.DirectoryLinkChange" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.associationType;
    if([self.updatedValues containsObject:@"associationType"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"associationType"];
            }
    }
	{id curVal = self.sourceObjectId;
    if([self.updatedValues containsObject:@"sourceObjectId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"sourceObjectId"];
            }
    }
	{id curVal = self.sourceObjectType;
    if([self.updatedValues containsObject:@"sourceObjectType"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"sourceObjectType"];
            }
    }
	{id curVal = self.sourceObjectUri;
    if([self.updatedValues containsObject:@"sourceObjectUri"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"sourceObjectUri"];
            }
    }
	{id curVal = self.targetObjectId;
    if([self.updatedValues containsObject:@"targetObjectId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"targetObjectId"];
            }
    }
	{id curVal = self.targetObjectType;
    if([self.updatedValues containsObject:@"targetObjectType"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"targetObjectType"];
            }
    }
	{id curVal = self.targetObjectUri;
    if([self.updatedValues containsObject:@"targetObjectUri"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"targetObjectUri"];
            }
    }
	{id curVal = self.objectType;
    if([self.updatedValues containsObject:@"objectType"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"objectType"];
            }
    }
	{id curVal = self.objectId;
    if([self.updatedValues containsObject:@"objectId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"objectId"];
            }
    }
	{id curVal = self.deletionTimestamp;
    if([self.updatedValues containsObject:@"deletionTimestamp"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"deletionTimestamp"];
            }
    }
    return dic;
}


/** Setter implementation for property associationType
 *
 */
- (void) setAssociationType: (NSString *) value {
    _associationType = value;
    [self valueChangedFor:@"associationType"];
}
       
/** Setter implementation for property sourceObjectId
 *
 */
- (void) setSourceObjectId: (NSString *) value {
    _sourceObjectId = value;
    [self valueChangedFor:@"sourceObjectId"];
}
       
/** Setter implementation for property sourceObjectType
 *
 */
- (void) setSourceObjectType: (NSString *) value {
    _sourceObjectType = value;
    [self valueChangedFor:@"sourceObjectType"];
}
       
/** Setter implementation for property sourceObjectUri
 *
 */
- (void) setSourceObjectUri: (NSString *) value {
    _sourceObjectUri = value;
    [self valueChangedFor:@"sourceObjectUri"];
}
       
/** Setter implementation for property targetObjectId
 *
 */
- (void) setTargetObjectId: (NSString *) value {
    _targetObjectId = value;
    [self valueChangedFor:@"targetObjectId"];
}
       
/** Setter implementation for property targetObjectType
 *
 */
- (void) setTargetObjectType: (NSString *) value {
    _targetObjectType = value;
    [self valueChangedFor:@"targetObjectType"];
}
       
/** Setter implementation for property targetObjectUri
 *
 */
- (void) setTargetObjectUri: (NSString *) value {
    _targetObjectUri = value;
    [self valueChangedFor:@"targetObjectUri"];
}
       

@end
