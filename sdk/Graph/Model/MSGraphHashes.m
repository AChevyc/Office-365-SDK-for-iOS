/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphHashes
 *
 */
@implementation MSGraphHashes


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"crc32Hash", @"crc32Hash", @"sha1Hash", @"sha1Hash", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.hashes";

        
    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
    
		_crc32Hash = [dic objectForKey: @"crc32Hash"] != nil ? [[dic objectForKey: @"crc32Hash"] copy] : _crc32Hash;
		_sha1Hash = [dic objectForKey: @"sha1Hash"] != nil ? [[dic objectForKey: @"sha1Hash"] copy] : _sha1Hash;

    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    return [[NSDictionary alloc] initWithObjectsAndKeys: 
    		 [_crc32Hash copy], @"crc32Hash",
		 [_sha1Hash copy], @"sha1Hash",
            nil];
}


/** Setter implementation for property crc32Hash
 *
 */
- (void) setCrc32Hash: (NSString *) value {
    _crc32Hash = value;
    [self valueChangedFor:@"crc32Hash"];
}
       
/** Setter implementation for property sha1Hash
 *
 */
- (void) setSha1Hash: (NSString *) value {
    _sha1Hash = value;
    [self valueChangedFor:@"sha1Hash"];
}
       

@end
