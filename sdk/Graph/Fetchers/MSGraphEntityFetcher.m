/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/


#import "MSGraphFetchers.h"

@implementation MSGraphEntityFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSGraphEntity class]]) {

		_operations = [[MSGraphEntityOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSGraphEntity *Entity, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSGraphEntityFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (MSGraphEntityFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

- (MSGraphEntityFetcher *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (MSGraphEntityFetcher *)expand:(NSString *)value {
    [super expand:value];
    
    return self;
}

- (void) readWithCallback:(void (^)(MSGraphEntity *Entity, MSOrcError *error))callback {
    [super readWithCallback:^(id response, MSOrcError *error) {
        callback(response, error);
    }];
}

- (MSGraphOutlookItemFetcher *)asOutlookItem {

	return [[MSGraphOutlookItemFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphOutlookItem class]];
}

- (MSGraphMailFolderFetcher *)asMailFolder {

	return [[MSGraphMailFolderFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphMailFolder class]];
}

- (MSGraphCalendarFetcher *)asCalendar {

	return [[MSGraphCalendarFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphCalendar class]];
}

- (MSGraphCalendarGroupFetcher *)asCalendarGroup {

	return [[MSGraphCalendarGroupFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphCalendarGroup class]];
}

- (MSGraphPersonFetcher *)asPerson {

	return [[MSGraphPersonFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphPerson class]];
}

- (MSGraphContactFolderFetcher *)asContactFolder {

	return [[MSGraphContactFolderFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphContactFolder class]];
}

- (MSGraphInferenceClassificationFetcher *)asInferenceClassification {

	return [[MSGraphInferenceClassificationFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphInferenceClassification class]];
}

- (MSGraphPhotoFetcher *)asPhoto {

	return [[MSGraphPhotoFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphPhoto class]];
}

- (MSGraphConversationThreadFetcher *)asConversationThread {

	return [[MSGraphConversationThreadFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphConversationThread class]];
}

- (MSGraphConversationFetcher *)asConversation {

	return [[MSGraphConversationFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphConversation class]];
}

- (MSGraphAttachmentFetcher *)asAttachment {

	return [[MSGraphAttachmentFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphAttachment class]];
}

- (MSGraphExtensionFetcher *)asExtension {

	return [[MSGraphExtensionFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphExtension class]];
}

- (MSGraphInferenceClassificationOverrideFetcher *)asInferenceClassificationOverride {

	return [[MSGraphInferenceClassificationOverrideFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphInferenceClassificationOverride class]];
}

@end
