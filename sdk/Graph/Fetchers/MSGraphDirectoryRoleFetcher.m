/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/


#import "MSGraphFetchers.h"

@implementation MSGraphDirectoryRoleFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSGraphDirectoryRole class]]) {

		_operations = [[MSGraphDirectoryRoleOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSGraphDirectoryRole *DirectoryRole, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSGraphDirectoryRoleFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (MSGraphDirectoryRoleFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

- (MSGraphDirectoryRoleFetcher *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (MSGraphDirectoryRoleFetcher *)expand:(NSString *)value {
    [super expand:value];
    
    return self;
}

- (void) readWithCallback:(void (^)(MSGraphDirectoryRole *DirectoryRole, MSOrcError *error))callback {
    [super readWithCallback:^(id response, MSOrcError *error) {
        callback(response, error);
    }];
}

- (MSGraphDirectoryObjectCollectionFetcher *)members {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"members" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)membersById:(NSString *)identifier {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"members" parent:self asClass:[MSGraphDirectoryObject class]] getById:identifier];

}

- (MSGraphDirectoryObjectCollectionFetcher *)memberOf {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"memberOf" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)memberOfById:(NSString *)identifier {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"memberOf" parent:self asClass:[MSGraphDirectoryObject class]] getById:identifier];

}

- (MSGraphDirectoryObjectCollectionFetcher *)owners {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"owners" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)ownersById:(NSString *)identifier {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"owners" parent:self asClass:[MSGraphDirectoryObject class]] getById:identifier];

}

- (MSGraphDirectoryObjectCollectionFetcher *)ownedObjects {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"ownedObjects" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)ownedObjectsById:(NSString *)identifier {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"ownedObjects" parent:self asClass:[MSGraphDirectoryObject class]] getById:identifier];

}

@end
