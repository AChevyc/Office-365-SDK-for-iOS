/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSOutlookModels.h"



/** Implementation for MSOutlookUser
 *
 */
@implementation MSOutlookUser


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"DisplayName", @"displayName", @"Alias", @"alias", @"MailboxGuid", @"mailboxGuid", @"RootFolder", @"rootFolder", @"Calendars", @"calendars", @"Calendar", @"calendar", @"CalendarGroups", @"calendarGroups", @"Events", @"events", @"CalendarView", @"calendarView", @"Folders", @"folders", @"Messages", @"messages", @"Contacts", @"contacts", @"ContactFolders", @"contactFolders", @"Id", @"_id", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.OutlookServices.User";
        
        
		_calendars = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_calendarGroups = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_events = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_calendarView = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_folders = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_messages = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_contacts = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_contactFolders = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property displayName
 *
 */
- (void) setDisplayName: (NSString *) value {
    _displayName = value;
    [self valueChanged:_displayName forProperty:@"DisplayName"];
}
       
/** Setter implementation for property alias
 *
 */
- (void) setAlias: (NSString *) value {
    _alias = value;
    [self valueChanged:_alias forProperty:@"Alias"];
}
       
/** Setter implementation for property mailboxGuid
 *
 */
- (void) setMailboxGuid: (NSString *) value {
    _mailboxGuid = value;
    [self valueChanged:_mailboxGuid forProperty:@"MailboxGuid"];
}
       
/** Setter implementation for property rootFolder
 *
 */
- (void) setRootFolder: (MSOutlookFolder *) value {
    _rootFolder = value;
    [self valueChanged:_rootFolder forProperty:@"RootFolder"];
}
       
/** Setter implementation for property calendars
 *
 */
- (void) setCalendars: (NSMutableArray *) value {
    _calendars = value;
    [self valueChanged:_calendars forProperty:@"Calendars"];
}
       
/** Setter implementation for property calendar
 *
 */
- (void) setCalendar: (MSOutlookCalendar *) value {
    _calendar = value;
    [self valueChanged:_calendar forProperty:@"Calendar"];
}
       
/** Setter implementation for property calendarGroups
 *
 */
- (void) setCalendarGroups: (NSMutableArray *) value {
    _calendarGroups = value;
    [self valueChanged:_calendarGroups forProperty:@"CalendarGroups"];
}
       
/** Setter implementation for property events
 *
 */
- (void) setEvents: (NSMutableArray *) value {
    _events = value;
    [self valueChanged:_events forProperty:@"Events"];
}
       
/** Setter implementation for property calendarView
 *
 */
- (void) setCalendarView: (NSMutableArray *) value {
    _calendarView = value;
    [self valueChanged:_calendarView forProperty:@"CalendarView"];
}
       
/** Setter implementation for property folders
 *
 */
- (void) setFolders: (NSMutableArray *) value {
    _folders = value;
    [self valueChanged:_folders forProperty:@"Folders"];
}
       
/** Setter implementation for property messages
 *
 */
- (void) setMessages: (NSMutableArray *) value {
    _messages = value;
    [self valueChanged:_messages forProperty:@"Messages"];
}
       
/** Setter implementation for property contacts
 *
 */
- (void) setContacts: (NSMutableArray *) value {
    _contacts = value;
    [self valueChanged:_contacts forProperty:@"Contacts"];
}
       
/** Setter implementation for property contactFolders
 *
 */
- (void) setContactFolders: (NSMutableArray *) value {
    _contactFolders = value;
    [self valueChanged:_contactFolders forProperty:@"ContactFolders"];
}
       

@end
