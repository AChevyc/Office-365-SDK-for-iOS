/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSOneNoteModels.h"



/** Implementation for MSOneNoteNotes
 *
 */
@implementation MSOneNoteNotes


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
    if(_$$$_$$$propertiesNamesMappings==nil){
    _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"id", @"_id", @"notebooks", @"notebooks", @"sections", @"sections", @"sectionGroups", @"sectionGroups", @"pages", @"pages", @"resources", @"resources", @"operations", @"_operations", nil];
    
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.OneNote.Api.Notes";
        
        
		_notebooks = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_sections = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_sectionGroups = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_pages = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		_resources = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
		__operations = [[NSMutableArray alloc] initWithCollectionType:@"NSMutableArray"];
    }

	return self;
}

/** Setter implementation for property _id
 *
 */
- (void) setId: (NSString *) value {
    __id = value;
    [self valueChanged:__id forProperty:@"id"];
}
       
/** Setter implementation for property notebooks
 *
 */
- (void) setNotebooks: (NSMutableArray *) value {
    _notebooks = value;
    [self valueChanged:_notebooks forProperty:@"notebooks"];
}
       
/** Setter implementation for property sections
 *
 */
- (void) setSections: (NSMutableArray *) value {
    _sections = value;
    [self valueChanged:_sections forProperty:@"sections"];
}
       
/** Setter implementation for property sectionGroups
 *
 */
- (void) setSectionGroups: (NSMutableArray *) value {
    _sectionGroups = value;
    [self valueChanged:_sectionGroups forProperty:@"sectionGroups"];
}
       
/** Setter implementation for property pages
 *
 */
- (void) setPages: (NSMutableArray *) value {
    _pages = value;
    [self valueChanged:_pages forProperty:@"pages"];
}
       
/** Setter implementation for property resources
 *
 */
- (void) setResources: (NSMutableArray *) value {
    _resources = value;
    [self valueChanged:_resources forProperty:@"resources"];
}
       
/** Setter implementation for property _operations
 *
 */
- (void) setOperations: (NSMutableArray *) value {
    __operations = value;
    [self valueChanged:__operations forProperty:@"operations"];
}
       

@end
