/*******************************************************************************
Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the MIT or Apache License; see LICENSE in the source repository
root for authoritative license information.ï»¿

**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).
******************************************************************************/

#import "MSDirectoryOrcEntities.h"

@implementation MSDirectoryDeviceFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSDirectoryDevice class]]) {

		_operations = [[MSDirectoryDeviceOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSDirectoryDevice *device, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSDirectoryDirectoryObjectCollectionFetcher *)registeredOwners {

    return [[MSDirectoryDirectoryObjectCollectionFetcher alloc] initWithUrl:@"registeredOwners" parent:self asClass:[MSDirectoryDirectoryObject class]];
}

- (MSDirectoryDirectoryObjectFetcher *)getRegisteredOwnersById:(NSString *)id {

    return [[[MSDirectoryDirectoryObjectCollectionFetcher alloc] initWithUrl:@"registeredOwners" parent:self asClass:[MSDirectoryDirectoryObject class]] getById:id];
}

- (MSDirectoryDirectoryObjectCollectionFetcher *)registeredUsers {

    return [[MSDirectoryDirectoryObjectCollectionFetcher alloc] initWithUrl:@"registeredUsers" parent:self asClass:[MSDirectoryDirectoryObject class]];
}

- (MSDirectoryDirectoryObjectFetcher *)getRegisteredUsersById:(NSString *)id {

    return [[[MSDirectoryDirectoryObjectCollectionFetcher alloc] initWithUrl:@"registeredUsers" parent:self asClass:[MSDirectoryDirectoryObject class]] getById:id];
}

@end