/*******************************************************************************
Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the MIT or Apache License; see LICENSE in the source repository
root for authoritative license information.ï»¿

**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).
******************************************************************************/

@class MSDirectoryOAuth2PermissionGrantOperations;
@class MSDirectoryOAuth2PermissionGrantFetcher;

#import <orc_engine_core/orc_engine_core.h>
#import "MSDirectoryModels.h"

/**
* The header for type MSDirectoryOAuth2PermissionGrantFetcher.
*/

@protocol MSDirectoryOAuth2PermissionGrantFetcherProtocol<MSOrcEntityFetcher>

@optional

- (void) readWithCallback:(void (^)(MSDirectoryOAuth2PermissionGrant *oAuth2PermissionGrant, MSOrcError *error))callback;
- (MSDirectoryOAuth2PermissionGrantFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value;
- (MSDirectoryOAuth2PermissionGrantFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value;
- (MSDirectoryOAuth2PermissionGrantFetcher *)select:(NSString *)params;
- (MSDirectoryOAuth2PermissionGrantFetcher *)expand:(NSString *)value;

@required

@property (copy, nonatomic, readonly) MSDirectoryOAuth2PermissionGrantOperations *operations;

@end

@interface MSDirectoryOAuth2PermissionGrantFetcher : MSOrcEntityFetcher<MSDirectoryOAuth2PermissionGrantFetcherProtocol>

- (instancetype)initWithUrl:(NSString*)urlComponent parent:(id<MSOrcExecutable>)parent;
- (void)update:(MSDirectoryOAuth2PermissionGrant *)oAuth2PermissionGrant callback:(void(^)(MSDirectoryOAuth2PermissionGrant *oAuth2PermissionGrant, MSOrcError *error))callback;
- (void)delete:(void(^)(int status, MSOrcError *error))callback;


@end